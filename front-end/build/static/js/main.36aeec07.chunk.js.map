{"version":3,"sources":["Ai.js","unit.js","components/Nav.js","components/Controller.js","Keyboard.js","components/Setting.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["truncatedMobileNet","model","layout","labelCol","span","wrapperCol","tailLayout","offset","loadTruncatedMobileNet","a","tf","mobilenet","layer","getLayer","inputs","outputs","output","sleep","time","Promise","resolve","setTimeout","vibrate","v","navigator","controllerDataset","example","action","y","this","xs","ys","oldX","concat","oldY","dispose","Option","Select","isBuildingExample","Ai","props","exampleCleanHandler","setState","exampleList","clean","exampleHandler","state","propAction","canvasRef","img","fromPixels","smallImg","resizeNearestNeighbor","processedImg","expandDims","toFloat","div","sub","speed","_action","direction","console","log","addExample","predict","toPixels","smallCanvasRef","current","push","toDataURL","train","learnArgument","isTraining","Error","layers","flatten","inputShape","shape","slice","dense","units","hiddenUnits","activation","kernelInitializer","useBias","optimizer","adam","learnRate","compile","loss","batchSize","Math","floor","fit","epochs","callbacks","onBatchEnd","batch","logs","toFixed","onTrainEnd","onAi","isPredicting","embeddings","predictions","data","doAction","record","isRecording","learnForm","loading","training","createRef","prevProps","prevState","controller","spinning","className","ref","initialValues","onFinish","Item","label","name","value","type","htmlType","key","disabled","length","required","icon","AppstoreAddOutlined","ArrowLeftOutlined","onClick","ArrowRightOutlined","ArrowUpOutlined","size","grid","gutter","column","itemLayout","pagination","pageSize","dataSource","renderItem","title","actions","CloseOutlined","style","maxWidth","src","alt","Component","Nav","mode","to","process","SettingOutlined","href","target","rel","YoutubeOutlined","GithubOutlined","WeiboOutlined","curentOrientation","Keybord","handleKeyDown","event","onControl","keyName","handleKeyUp","keyboardBind","window","document","addEventListener","removeEventListener","isSupportedOrientaion","e","alpha","beta","gamma","Controller","deviceorientation","directionReverse","isAiControlling","zeroOrientation","bateDegree","fixedController","forwardPower","backwardPower","speedReverse","directionFix","fixContent","display","undefined","AimOutlined","checked","onChange","store","set","min","max","included","width","get","isShowButton","handleSetZeroOrientation","content","trigger","SlidersOutlined","onTouchStart","onTouchEnd","LeftOutlined","RightOutlined","UpOutlined","DownOutlined","Setting","onDisconnect","wsConnected","onSubmit","serverSetting","form","rules","message","maxSpeed","tooltipVisible","Login","App","connect","wsAddress","setting","wsavc","location","protocol","disconnect","preventDefault","login","password","send","token","md5","changeCamera","enabled","cameraMode","changeLight","enable","changeSetting","navigate","changeZeroSpeedRate","speedZeroRate","changeSpeed","speedRate","changeDirection","directionRate","switchContent","lightEnabled","cameraEnabled","appRef","playerBoxRef","speedMax","host","isFullscreen","WSAvcPlayer","useWorker","on","needPassword","fbl","payload","appendChild","AvcPlayer","canvas","m","success","error","body","fullscreenElement","Button","overlay","HomeOutlined","ControlOutlined","requestFullscreen","CompressOutlined","ExpandOutlined","exitFullscreen","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.36aeec07.chunk.js","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport { Form, Button, Spin, InputNumber, List, Card, Select } from \"antd\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport { AppstoreAddOutlined, CloseOutlined, ArrowLeftOutlined, ArrowRightOutlined, ArrowUpOutlined } from \"@ant-design/icons\";\nimport {\n  layout,\n  tailLayout,\n  loadTruncatedMobileNet,\n  ControllerDataset,\n  sleep\n} from \"./unit\";\n\nlet truncatedMobileNet, model;\nconst controllerDataset = new ControllerDataset();\nconst { Option } = Select;\n\nlet isBuildingExample = false;\n\nexport default class Ai extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      learnForm: {},\n      exampleList: [],\n      loading: false,\n      training: false,\n      isPredicting: false,\n      isRecording: false,\n      loss: 0,\n      learnArgument: {\n        learnRate: 0.001,\n        batchSize: 0.4,\n        epochs: 20,\n        hiddenUnits: 100\n      }\n    };\n    this.smallCanvasRef = createRef();\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    truncatedMobileNet = await loadTruncatedMobileNet();\n    this.setState({ loading: false });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.action !== this.props.action &&\n      this.state.isRecording &&\n      !isBuildingExample\n    ) {\n      this.exampleHandler(this.props.action);\n    }\n  }\n\n  exampleCleanHandler = async () => {\n    this.setState({\n      exampleList: []\n    });\n    controllerDataset.clean();\n  };\n\n  exampleHandler = async action => {\n    isBuildingExample = true;\n    const {\n      state: { exampleList },\n      props: { action: propAction, canvasRef }\n    } = this;\n\n    const img = tf.browser.fromPixels(canvasRef);\n    const smallImg = img.resizeNearestNeighbor([224, 224]);\n    const processedImg = tf.tidy(() =>\n      smallImg\n        .expandDims(0)\n        .toFloat()\n        .div(127)\n        .sub(1)\n    );\n    const _action = action || propAction;\n    const { speed, direction } = _action;\n    console.log(\"example\", _action);\n    controllerDataset.addExample(truncatedMobileNet.predict(processedImg), [\n      speed,\n      direction\n    ]);\n    await tf.browser.toPixels(smallImg, this.smallCanvasRef.current);\n    exampleList.push({\n      img: this.smallCanvasRef.current.toDataURL(),\n      action: { speed, direction }\n    });\n    this.setState({ exampleList });\n    img.dispose();\n    isBuildingExample = false;\n  };\n\n  train = async learnArgument => {\n    this.setState({\n      isTraining: true\n    });\n    console.log(\"Learnning Argument\", learnArgument);\n    if (controllerDataset.xs == null) {\n      throw new Error(\"Add some examples before training!\");\n    }\n\n    // Creates a 2-layer fully connected model. By creating a separate model,\n    // rather than adding layers to the mobilenet model, we \"freeze\" the weights\n    // of the mobilenet model, and only train weights from the new model.\n    model = tf.sequential({\n      layers: [\n        // Flattens the input to a vector so we can use it in a dense layer. While\n        // technically a layer, this only performs a reshape (and has no training\n        // parameters).\n        tf.layers.flatten({\n          inputShape: truncatedMobileNet.outputs[0].shape.slice(1)\n        }),\n        // Layer 1.\n        tf.layers.dense({\n          units: learnArgument.hiddenUnits,\n          activation: \"relu\",\n          kernelInitializer: \"varianceScaling\",\n          useBias: true\n        }),\n        // Layer 2. The number of units of the last layer should correspond\n        // to the number of classes we want to predict.\n        tf.layers.dense({\n          units: 2,\n          kernelInitializer: \"varianceScaling\",\n          useBias: false,\n          activation: \"softmax\"\n        })\n      ]\n    });\n\n    // Creates the optimizers which drives training of the model.\n    const optimizer = tf.train.adam(learnArgument.learnRate);\n    // We use categoricalCrossentropy which is the loss function we use for\n    // categorical classification which measures the error between our predicted\n    // probability distribution over classes (probability that an input is of each\n    // class), versus the label (100% probability in the true class)>\n    model.compile({ optimizer: optimizer, loss: \"meanSquaredError\" });\n\n    // We parameterize batch size as a fraction of the entire dataset because the\n    // number of examples that are collected depends on how many examples the user\n    // collects. This allows us to have a flexible batch size.\n    const batchSize = Math.floor(\n      controllerDataset.xs.shape[0] * learnArgument.batchSize\n    );\n    if (!(batchSize > 0)) {\n      throw new Error(\n        `Batch size is 0 or NaN. Please choose a non-zero fraction.`\n      );\n    }\n\n    // Train the model! Model.fit() will shuffle xs & ys so we don't have to.\n    model.fit(controllerDataset.xs, controllerDataset.ys, {\n      batchSize,\n      epochs: learnArgument.epochs,\n      callbacks: {\n        onBatchEnd: async (batch, logs) => {\n          console.log(\"Loss: \" + logs.loss.toFixed(5));\n          this.setState({ loss: logs.loss.toFixed(5) });\n        },\n        onTrainEnd: logs => {\n          // const loss = logs.loss.toFixed(5);\n          // console.log(\"Train End Loss: \" + logs.loss.toFixed(5));\n          this.setState({\n            isTraining: false\n            // loss\n          });\n        }\n      }\n    });\n  };\n\n  predict = async () => {\n    const {\n      props: { canvasRef, onAi }\n    } = this;\n    onAi(true);\n    this.setState(\n      {\n        isPredicting: true\n      },\n      async () => {\n        while (this.state.isPredicting) {\n          await sleep(200);\n          const img = tf.tidy(() =>\n            tf.browser\n              .fromPixels(canvasRef)\n              .resizeNearestNeighbor([224, 224])\n              .expandDims(0)\n              .toFloat()\n              .div(127)\n              .sub(1)\n          );\n\n          // Make a prediction through mobilenet, getting the internal activation of\n          // the mobilenet model, i.e., \"embeddings\" of the input images.\n          const embeddings = truncatedMobileNet.predict(img);\n\n          // Make a prediction through our newly-trained model using the embeddings\n          // from mobilenet as input.\n          const predictions = model.predict(embeddings);\n\n          // Returns the index with the maximum probability. This number corresponds\n          // to the class the model thinks is the most probable given the input.\n\n          const [speed, direction] = await predictions.data();\n\n          const action = {\n            speed,\n            direction\n          };\n          console.log(\"Ai 动作：\", action);\n          img.dispose();\n\n          this.doAction(action);\n          await tf.nextFrame();\n        }\n        onAi(false);\n      }\n    );\n  };\n\n  record = async () => {\n    this.setState(\n      {\n        isRecording: true\n      }\n      // async () => {\n      //   while (this.state.isRecording) {\n      //     await this.exampleHandler();\n      //     await sleep(1000);\n      //   }\n      // }\n    );\n  };\n\n  async doAction({ speed, direction }) {\n    const {\n      props: { controller }\n    } = this;\n    controller.direction(direction);\n    // controller.speed(speed);\n  }\n\n  render() {\n    const {\n      state: {\n        exampleList,\n        loading,\n        isRecording,\n        isTraining,\n        isPredicting,\n        loss,\n        learnArgument\n      },\n      exampleHandler,\n      exampleCleanHandler,\n      record,\n      predict\n    } = this;\n\n    return (\n      <Spin spinning={loading}>\n        <canvas className=\"ai-canvas\" ref={this.smallCanvasRef}></canvas>\n        <Form {...layout} initialValues={learnArgument} onFinish={this.train}>\n          <Form.Item label=\"Learning rate\" name=\"learnRate\">\n            <InputNumber />\n          </Form.Item>\n          <Form.Item label=\"Batch Size\" name=\"batchSize\">\n            <Select>\n              <Option value={0.05}>0.05</Option>\n              <Option value={0.1}>0.1</Option>\n              <Option value={0.4}>0.4</Option>\n              <Option value={1}>1</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Epochs\" name=\"epochs\">\n            <Select>\n              <Option value={10}>10</Option>\n              <Option value={20}>20</Option>\n              <Option value={40}>40</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Hidden units\" name=\"hiddenUnits\">\n            <Select>\n              <Option value={100}>100</Option>\n              <Option value={200}>200</Option>\n              <Option value={300}>300</Option>\n              <Option value={400}>400</Option>\n              <Option value={500}>500</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"loss\">\n            <InputNumber value={loss} />\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              key=\"fit\"\n              loading={isTraining}\n              disabled={!exampleList.length}\n            >\n              学习\n            </Button>\n          </Form.Item>\n        </Form>\n        <Form\n          {...layout}\n          initialValues={{ speed: 0, direction: 0 }}\n          onFinish={action => exampleHandler(action)}\n        >\n          <Form.Item name=\"speed\" label=\"速度\" required>\n            <InputNumber />\n          </Form.Item>\n          <Form.Item name=\"direction\" label=\"方向\" required>\n            <InputNumber />\n          </Form.Item>\n          <Form.Item {...tailLayout} className=\"form-item-button\">\n            <Button\n              key=\"record-once\"\n              htmlType=\"submit\"\n              type=\"primary\"\n              icon={<AppstoreAddOutlined />}\n            />\n            <Button\n              type=\"primary\"\n              icon={<ArrowLeftOutlined />}\n              onClick={() => exampleHandler({ speed: 1, direction: 1 })}\n            />\n            <Button\n              type=\"primary\"\n              icon={<ArrowRightOutlined />}\n              onClick={() => exampleHandler({ speed: 1, direction: -1 })}\n            />\n            <Button\n              type=\"primary\"\n              icon={<ArrowUpOutlined />}\n              onClick={() => exampleHandler({ speed: 1, direction: 0 })}\n            />\n            <Button\n              type=\"primary\"\n              key=\"record\"\n              loading={isRecording}\n              onClick={record}\n            >\n              开始记录\n            </Button>\n            <Button\n              key=\"stop\"\n              onClick={() => {\n                this.setState({ isRecording: false });\n              }}\n              disabled={!isRecording}\n            >\n              停止记录\n            </Button>\n            <Button\n              type=\"danger\"\n              disabled={!exampleList.length}\n              onClick={exampleCleanHandler}\n            >\n              清除\n            </Button>\n          </Form.Item>\n          <Form.Item {...tailLayout} className=\"form-item-button\">\n            <Button\n              type=\"danger\"\n              key=\"predic\"\n              loading={isPredicting}\n              onClick={predict}\n            >\n              开始 Ai 驾驶\n            </Button>\n            <Button\n              onClick={() => {\n                this.setState({ isPredicting: false });\n              }}\n              disabled={!isPredicting}\n              key=\"stop\"\n            >\n              停止 Ai 驾驶\n            </Button>\n          </Form.Item>\n        </Form>\n        <List\n          size=\"small\"\n          className=\"ai-example-list\"\n          grid={{ gutter: 16, column: 4 }}\n          itemLayout=\"vertical\"\n          pagination={{\n            pageSize: 12\n          }}\n          dataSource={exampleList}\n          renderItem={({ img, action: { speed, direction } }) => (\n            <List.Item>\n              <Card\n                size=\"small\"\n                title={`速度：${speed}    方向：${direction}`}\n                actions={[\n                  <Button size=\"small\" icon={<CloseOutlined />} type=\"danger\" />\n                ]}\n              >\n                <img style={{ maxWidth: \"100%\" }} src={img} alt=\"example\" />\n              </Card>\n            </List.Item>\n          )}\n        />\n      </Spin>\n    );\n  }\n}\n","import * as tf from \"@tensorflow/tfjs\";\n\nexport const layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nexport const tailLayout = {\n  wrapperCol: { offset: 6, span: 16 },\n};\n\nexport const marks = {\n  0: \"0%\",\n  25: \"25%\",\n  50: \"50%\",\n  75: \"75%\",\n  100: \"100%\",\n};\n\nexport async function loadTruncatedMobileNet() {\n  const mobilenet = await tf.loadLayersModel(\n    \"https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_1.0_224/model.json\"\n  );\n  // Return a model that outputs an internal activation.\n  const layer = mobilenet.getLayer(\"conv_pw_13_relu\");\n  return tf.model({ inputs: mobilenet.inputs, outputs: layer.output });\n}\n\nexport class ControllerDataset {\n  /**\n   * Adds an example to the controller dataset.\n   * @param {Tensor} example A tensor representing the example. It can be an image,\n   *     an activation, or any other type of Tensor.\n   * @param {[number]} action speed and direction.\n   */\n  addExample(example, action) {\n    // One-hot encode the label.\n    const y = tf.tidy(() => tf.tensor2d(action, [1, 2]));\n\n    if (this.xs == null) {\n      // For the first example that gets added, keep example and y so that the\n      // ControllerDataset owns the memory of the inputs. This makes sure that\n      // if addExample() is called in a tf.tidy(), these Tensors will not get\n      // disposed.\n      this.xs = tf.keep(example);\n      this.ys = tf.keep(y);\n    } else {\n      const oldX = this.xs;\n      this.xs = tf.keep(oldX.concat(example, 0));\n\n      const oldY = this.ys;\n      this.ys = tf.keep(oldY.concat(y, 0));\n\n      oldX.dispose();\n      oldY.dispose();\n      y.dispose();\n    }\n  }\n  clean() {\n    this.xs.dispose();\n    this.ys.dispose();\n    this.xs = null;\n    this.ys = null;\n  }\n}\n\nexport async function sleep(time) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n}\n\nexport function vibrate(v) {\n  navigator.vibrate && navigator.vibrate(v);\n}\n","import React from \"react\";\nimport { Menu } from \"antd\";\nimport { Link } from \"@reach/router\";\nimport {\n  GithubOutlined,\n  YoutubeOutlined,\n  WeiboOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\n\nexport default function Nav(props) {\n  return (\n    <Menu mode=\"horizontal\" {...props}>\n      {/* <Menu.Item> */}\n      {/* <Link to=\"/\">控制</Link> */}\n      {/* </Menu.Item> */}\n      <Menu.Item>\n        <Link to={`${process.env.PUBLIC_URL}/setting`}>\n          <SettingOutlined /> 设置\n        </Link>\n      </Menu.Item>\n\n      <Menu.Item>\n        <a\n          href=\"https://space.bilibili.com/96740361\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <YoutubeOutlined /> B站 EsonWong\n        </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a\n          href=\"https://www.youtube.com/channel/UCyQR6LHhhhpTFfxZo7VZddA\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <YoutubeOutlined /> Youtube EsonWong\n        </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a\n          href=\"https://github.com/itiwll/network-rc\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <GithubOutlined /> Github Network-rc\n        </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a\n          href=\"https://weibo.com/u/5034944416\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <WeiboOutlined /> 微博 Eson_Wong\n        </a>\n      </Menu.Item>\n      {/* <Menu.Item>\n        <Link to=\"ai\">Ai</Link>\n      </Menu.Item> */}\n    </Menu>\n  );\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Form, Button, Switch, Slider, Popover } from \"antd\";\nimport { SlidersOutlined } from \"@ant-design/icons\";\nimport {\n  AimOutlined,\n  DownOutlined,\n  UpOutlined,\n  LeftOutlined,\n  RightOutlined,\n} from \"@ant-design/icons\";\nimport store from \"store\";\nimport Keybord from \"../Keyboard\";\nimport { vibrate } from \"../unit\";\n\nlet curentOrientation;\nlet isSupportedOrientaion = false;\nconst deviceorientation = (e) => {\n  const { alpha, beta, gamma } = e;\n  curentOrientation = { alpha, beta, gamma };\n  if (alpha || isSupportedOrientaion) {\n    isSupportedOrientaion = true;\n  }\n};\n\nwindow.addEventListener(\"deviceorientation\", deviceorientation);\n\nexport default class Controller extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zeroOrientation: undefined,\n      directionReverse: store.get(\"directionReverse\") || false,\n      speedReverse: store.get(\"speedReverse\") || false,\n      backwardPower: 50,\n      forwardPower: 50,\n      directionFix: store.get(\"directionFix\") || 0,\n      isShowButton: true,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"deviceorientation\", this.deviceorientation);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"deviceorientation\",\n      this.handleSetZeroOrientation\n    );\n  }\n  deviceorientation = ({ alpha, beta, gamma }) => {\n    const {\n      props: { controller },\n      state: { directionReverse, isAiControlling, zeroOrientation },\n    } = this;\n    if (!zeroOrientation) return;\n    if (isAiControlling) return;\n    const { beta: baseBeta } = zeroOrientation;\n    let bateDegree = beta - baseBeta;\n    bateDegree = bateDegree < -30 ? -30 : bateDegree;\n    bateDegree = bateDegree > 30 ? 30 : bateDegree;\n    controller.direction((bateDegree / 30) * (directionReverse ? -1 : 1));\n  };\n\n  fixedController = {\n    speed: (v) => {\n      const {\n        props: {\n          controller: { speed },\n        },\n        state: { forwardPower, backwardPower, speedReverse },\n      } = this;\n      speed(\n        v *\n          (speedReverse ? -1 : 1) *\n          ((v > 0 ? forwardPower : backwardPower) / 100)\n      );\n    },\n    direction: (v) => {\n      const {\n        props: {\n          controller: { direction },\n        },\n        state: { directionReverse, directionFix },\n      } = this;\n      direction(v * (directionReverse ? -1 : 1) + directionFix);\n    },\n  };\n\n  fixContent = () => {\n    const { directionReverse, speedReverse, directionFix } = this.state;\n    return (\n      <Form>\n        <Form.Item\n          style={{ display: isSupportedOrientaion ? undefined : \"none\" }}\n        >\n          <Button\n            type=\"danger\"\n            onClick={() => {\n              this.setState({ zeroOrientation: { ...curentOrientation } });\n            }}\n            icon={<AimOutlined />}\n          >\n            舵机感应校准\n          </Button>\n        </Form.Item>\n        <Form.Item label=\"舵机反向\">\n          <Switch\n            checked={directionReverse}\n            onChange={(v) => {\n              this.setState({\n                directionReverse: v,\n              });\n              store.set(\"directionReverse\", v);\n            }}\n          />\n        </Form.Item>\n        <Form.Item label=\"油门反向\">\n          <Switch\n            checked={speedReverse}\n            onChange={(v) => {\n              this.setState({\n                speedReverse: v,\n              });\n              store.set(\"speedReverse\", v);\n            }}\n          />\n        </Form.Item>\n        <Form.Item label=\"舵机微调\">\n          <Slider\n            value={directionFix * 50 + 50}\n            min={0}\n            max={100}\n            included={false}\n            onChange={(v) => {\n              const directionFix = v / 50 - 1;\n              store.set(\"directionFix\", directionFix);\n              this.setState({ directionFix }, () => {\n                this.fixedController.direction(0);\n              });\n            }}\n            style={{ width: \"50vw\" }}\n          />\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  render() {\n    const {\n      fixContent,\n      fixedController: { speed, direction },\n    } = this;\n    const { forwardPower, backwardPower, isShowButton } = this.state;\n    return (\n      <div className=\"controller\">\n        <Form className=\"controller-form\" size=\"small\" layout=\"inline\">\n          <Form.Item>\n            <Popover content={fixContent} title=\"修正\" trigger=\"click\">\n              <Button icon={<SlidersOutlined />}>修正</Button>\n            </Popover>\n          </Form.Item>\n          {isShowButton && (\n            <Fragment>\n              <Button\n                className=\"left-button\"\n                shape=\"circle\"\n                size=\"large\"\n                type=\"primary\"\n                onTouchStart={() => {\n                  direction(1);\n                  vibrate(50);\n                }}\n                onTouchEnd={() => {\n                  direction(0);\n                }}\n                icon={<LeftOutlined />}\n                style={{ display: !isSupportedOrientaion ? undefined : \"none\" }}\n              ></Button>\n              <Button\n                className=\"right-button\"\n                shape=\"circle\"\n                size=\"large\"\n                type=\"primary\"\n                onTouchStart={() => {\n                  direction(-1);\n                  vibrate(50);\n                }}\n                onTouchEnd={() => {\n                  direction(0);\n                }}\n                icon={<RightOutlined />}\n                style={{ display: !isSupportedOrientaion ? undefined : \"none\" }}\n              ></Button>\n              <Button\n                className=\"forward-button\"\n                shape=\"circle\"\n                size=\"large\"\n                type=\"primary\"\n                onTouchStart={() => {\n                  speed(1);\n                  vibrate(300);\n                }}\n                onTouchEnd={() => {\n                  speed(0);\n                }}\n                icon={<UpOutlined />}\n              ></Button>\n              <Button\n                className=\"backward-button\"\n                shape=\"circle\"\n                size=\"large\"\n                type=\"primary\"\n                onTouchStart={() => {\n                  speed(-1);\n                  vibrate([100, 50, 100]);\n                }}\n                onTouchEnd={() => {\n                  speed(0);\n                }}\n                icon={<DownOutlined />}\n              ></Button>\n            </Fragment>\n          )}\n          <Form.Item label=\"虚拟按钮\">\n            <Switch\n              checked={isShowButton}\n              onChange={(isShowButton) => this.setState({ isShowButton })}\n            />\n          </Form.Item>\n          <Form.Item label=\"键盘\">wsad</Form.Item>\n          <Form.Item label=\"前进油门\">\n            <Slider\n              value={forwardPower}\n              min={0}\n              max={100}\n              onChange={(forwardPower) => {\n                this.setState({ forwardPower });\n              }}\n              style={{ width: \"15vw\" }}\n            />\n          </Form.Item>\n          <Form.Item label=\"倒退油门\">\n            <Slider\n              value={backwardPower}\n              min={0}\n              max={100}\n              style={{ width: \"15vw\" }}\n              onChange={(backwardPower) => {\n                this.setState({ backwardPower });\n              }}\n            />\n          </Form.Item>\n        </Form>\n        <Keybord controller={{ speed, direction }} />\n      </div>\n    );\n  }\n}\n","import React, { Component, createRef } from \"react\";\n\nexport default class Keybord extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = createRef();\n  }\n\n  componentDidMount() {\n    this.keyboardBind();\n  }\n\n  componentWillUnmount() {\n    const { handleKeyDown, handleKeyUp } = this;\n    window.document.removeEventListener(\"keydown\", handleKeyDown, false);\n    window.document.removeEventListener(\"keyup\", handleKeyUp, false);\n  }\n\n  handleKeyDown = (event) => {\n    const {\n      props: {\n        controller: { speed, direction },\n        onControl,\n      },\n    } = this;\n    const keyName = event.key;\n    if (keyName === \"w\") {\n      speed(1);\n    }\n    if (keyName === \"s\") {\n      speed(-1);\n    }\n    if (keyName === \"a\") {\n      direction(1);\n    }\n    if (keyName === \"d\") {\n      direction(-1);\n    }\n    onControl && onControl();\n  };\n\n  handleKeyUp = (event) => {\n    const {\n      props: {\n        controller: { speed, direction },\n        onControl,\n      },\n    } = this;\n    const keyName = event.key;\n    if (keyName === \"w\") {\n      speed(0);\n    }\n    if (keyName === \"s\") {\n      speed(0);\n    }\n    if (keyName === \"a\") {\n      direction(0);\n    }\n    if (keyName === \"d\") {\n      direction(0);\n    }\n    onControl && onControl();\n  };\n\n  keyboardBind = () => {\n    const { handleKeyDown, handleKeyUp } = this;\n    window.document.addEventListener(\"keydown\", handleKeyDown, false);\n    window.document.addEventListener(\"keyup\", handleKeyUp, false);\n  };\n\n  render() {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport { Slider, Form, Button, Input, Select } from \"antd\";\nimport { layout, tailLayout } from \"../unit\";\n\nconst { Option } = Select;\n\nexport default function Setting({\n  onDisconnect,\n  wsConnected,\n  onSubmit,\n  serverSetting,\n  ...form\n}) {\n  return (\n    <Form {...layout} onFinish={onSubmit} initialValues={form}>\n      <br />\n      <Form.Item\n        label=\"连接地址\"\n        name=\"wsAddress\"\n        rules={[{ required: true, message: \"请输入连接地址!\" }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"最大速度\" name=\"speedMax\">\n        <Slider min={0} max={serverSetting.maxSpeed} tooltipVisible />\n      </Form.Item>\n      <Form.Item label=\"摄像头模式\" name=\"cameraMode\">\n        <Select>\n          <Option value=\"default\">默认(低质量)</Option>\n          <Option value=\"local\">本地网络(高质量)</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          保存\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import React from \"react\";\nimport { layout, tailLayout } from \"../unit\";\nimport { Input, Button, Form } from \"antd\";\n\nexport default function Login({ onSubmit }) {\n  return (\n    <Form {...layout} onFinish={onSubmit}>\n      <Form.Item label=\"密码\" name=\"password\">\n        <Input type=\"password\" />\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          登录\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import React, { Component, createRef } from \"react\";\nimport store from \"store\";\nimport {\n  InputNumber,\n  Form,\n  Switch,\n  Dropdown,\n  Button,\n  Popover,\n  message,\n} from \"antd\";\nimport \"./App.css\";\nimport Ai from \"./Ai\";\nimport { Router, Location, navigate } from \"@reach/router\";\nimport Nav from \"./components/Nav\";\nimport Controller from \"./components/Controller\";\nimport Setting from \"./components/Setting\";\nimport WSAvcPlayer from \"ws-avc-player\";\nimport {\n  HomeOutlined,\n  ExpandOutlined,\n  CompressOutlined,\n  ControlOutlined,\n} from \"@ant-design/icons\";\nimport Login from \"./components/Login\";\nimport md5 from \"md5\";\n\nconst pubilcUrl = process.env.PUBLIC_URL;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.appRef = createRef();\n    this.playerBoxRef = createRef();\n    this.state = {\n      setting: {\n        speedMax: 20,\n        wsAddress: window.location.host,\n        cameraMode: \"default\",\n        ...store.get(\"setting\"),\n      },\n      serverSetting: {\n        maxSpeed: 100,\n      },\n      wsConnected: false,\n      cameraEnabled: false,\n      lightEnabled: false,\n      canvasRef: undefined,\n      isAiControlling: false,\n      isFullscreen: false,\n      action: {\n        speed: 0,\n        direction: 0,\n      },\n    };\n\n    this.controller = {\n      speed: (v) => {\n        const {\n          changeSpeed,\n          state: {\n            setting: { speedMax },\n            action,\n          },\n        } = this;\n        // let vAbs = Math.abs(v);\n        // if (vAbs > speedMax / 100) {\n        //   vAbs = speedMax / 100;\n        // }\n        // action.speed = v > 0 ? vAbs : -vAbs;\n        action.speed = (v * speedMax) / 100;\n        this.setState({ action: { ...action } });\n        changeSpeed(action.speed);\n      },\n      direction: (v) => {\n        const {\n          changeDirection,\n          state: { action },\n        } = this;\n        action.direction = v;\n        changeDirection(v);\n        this.setState({ action: { ...action } });\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { connect } = this;\n    this.wsavc = new WSAvcPlayer({ useWorker: true });\n\n    this.wsavc.on(\"controller init\", ({ needPassword, maxSpeed }) => {\n      this.setState({ serverSetting: { maxSpeed, needPassword } });\n      if (needPassword) {\n        navigate(`${pubilcUrl}/login`);\n      }\n    });\n\n    this.wsavc.on(\"disconnected\", () => {\n      console.log(\"WS disconnected\");\n      this.setState({ wsConnected: false, cameraEnabled: false });\n    });\n    this.wsavc.on(\"connected\", () => {\n      console.log(\"WS connected\");\n      this.setState({ wsConnected: true });\n    });\n    this.wsavc.on(\"frame_shift\", (fbl) => {\n      // console.log(\"Stream frame shift: \", fbl);\n    });\n    this.wsavc.on(\"resized\", (payload) => {\n      console.log(\"resized\", payload);\n    });\n    this.wsavc.on(\"stream_active\", (cameraEnabled) => {\n      console.log(\"Stream is \", cameraEnabled ? \"active\" : \"offline\");\n      if (cameraEnabled) {\n        this.playerBoxRef.current.appendChild(this.wsavc.AvcPlayer.canvas);\n      }\n      this.setState({ cameraEnabled });\n    });\n\n    this.wsavc.on(\"light enabled\", (lightEnabled) => {\n      this.setState({ lightEnabled });\n    });\n\n    this.wsavc.on(\"login\", ({ message: m }) => {\n      message.success(m);\n      navigate(`${pubilcUrl}/`);\n    });\n\n    this.wsavc.on(\"error\", ({ message: m }) => {\n      message.error(m);\n    });\n\n    connect();\n\n    document.body.addEventListener(\"fullscreenchange\", () => {\n      if (document.fullscreenElement) {\n        this.setState({ isFullscreen: true });\n      } else {\n        this.setState({ isFullscreen: false });\n      }\n    });\n  }\n\n  connect = () => {\n    const { wsAddress } = this.state.setting;\n    this.wsavc.connect(\n      `${\n        window.location.protocol === \"https:\" ? \"wss://\" : \"ws://\"\n      }${wsAddress}`\n    );\n  };\n\n  disconnect = (e) => {\n    e && e.preventDefault();\n    this.setState({ wsConnected: false });\n    if (!this.wsavc) return;\n    this.wsavc.disconnect();\n  };\n\n  login = ({ password }) => {\n    if (!this.wsavc) return;\n    this.wsavc.send(\"login\", {\n      token: md5(`${password}eson`),\n    });\n  };\n\n  changeCamera = (enabled) => {\n    const {\n      state: {\n        setting: { cameraMode },\n      },\n    } = this;\n    if (!this.wsavc) return;\n    this.wsavc.send(\"open camera\", { enabled, cameraMode });\n  };\n\n  changeLight = (enable) => {\n    if (!this.wsavc) return;\n    this.wsavc.send(\"open light\", enable);\n  };\n\n  changeSetting = (setting) => {\n    this.setState({ setting });\n    store.set(\"setting\", setting);\n    navigate(`${pubilcUrl}/`);\n\n    // this.connect();\n  };\n\n  changeZeroSpeedRate = (speedZeroRate) => {\n    if (!this.state.wsConnected) return;\n    this.wsavc.send(\"speed zero rate\", speedZeroRate);\n    this.setState({ speedZeroRate });\n  };\n\n  changeSpeed = (speedRate) => {\n    if (!this.state.wsConnected) return;\n    this.wsavc.send(\"speed rate\", speedRate);\n  };\n\n  changeDirection = (directionRate) => {\n    if (!this.state.wsConnected) return;\n    this.wsavc.send(\"direction rate\", directionRate);\n  };\n\n  switchContent = () => {\n    const {\n      changeCamera,\n      changeLight,\n      state: { lightEnabled, cameraEnabled },\n    } = this;\n    return (\n      <Form>\n        <Form.Item label=\"摄像头\">\n          <Switch checked={cameraEnabled} onChange={changeCamera} />\n        </Form.Item>\n        <Form.Item label=\"车灯\">\n          <Switch checked={lightEnabled} onChange={changeLight} />\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  render() {\n    const {\n      disconnect,\n      connect,\n      controller,\n      changeSetting,\n      switchContent,\n      login,\n      state: {\n        setting,\n        wsConnected,\n        cameraEnabled,\n        canvasRef,\n        action,\n        isFullscreen,\n        serverSetting\n      },\n    } = this;\n    return (\n      <div className=\"App\" ref={this.appRef}>\n        <Form layout=\"inline\" className=\"app-status\" size=\"small\">\n          <Form.Item>\n            <Location>\n              {({ navigate }) => (\n                <Dropdown.Button\n                  overlay={Nav}\n                  onClick={() => navigate(\"/\")}\n                  type=\"primary\"\n                >\n                  <HomeOutlined /> 控制\n                </Dropdown.Button>\n              )}\n            </Location>\n          </Form.Item>\n          <Form.Item label=\"连接\">\n            <Switch\n              checked={wsConnected}\n              onChange={(v) => {\n                if (v) connect();\n                else disconnect();\n              }}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Popover content={switchContent} title=\"开关\" trigger=\"click\">\n              <Button icon={<ControlOutlined />}>开关</Button>\n            </Popover>\n          </Form.Item>\n\n          <Form.Item label=\"舵机\">\n            <InputNumber value={action.direction} />\n          </Form.Item>\n          <Form.Item label=\"电调\">\n            <InputNumber value={action.speed} />\n          </Form.Item>\n\n          {document.body.requestFullscreen && (\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                shape=\"circle\"\n                icon={isFullscreen ? <CompressOutlined /> : <ExpandOutlined />}\n                onClick={() => {\n                  if (isFullscreen) {\n                    document.exitFullscreen();\n                  } else {\n                    document.body.requestFullscreen();\n                  }\n                }}\n              ></Button>\n            </Form.Item>\n          )}\n        </Form>\n\n        <Router className=\"app-page\">\n          <Controller\n            path={`${process.env.PUBLIC_URL}/`}\n            controller={controller}\n          />\n          <Setting\n            path={`${process.env.PUBLIC_URL}/setting`}\n            {...setting}\n            serverSetting={serverSetting}\n            wsConnected={wsConnected}\n            onDisconnect={disconnect}\n            onSubmit={changeSetting}\n          />\n          <Login path={`${process.env.PUBLIC_URL}/login`} onSubmit={login} />\n          <Ai\n            path={`${process.env.PUBLIC_URL}/ai`}\n            canvasRef={canvasRef}\n            action={action}\n            controller={controller}\n            onAi={(isAiControlling) => this.setState({ isAiControlling })}\n          />\n        </Router>\n        <div\n          className=\"player-box\"\n          ref={this.playerBoxRef}\n          style={{ display: cameraEnabled ? \"flex\" : \"none\" }}\n        ></div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}