{"version":3,"sources":["Ai.js","unit.js","components/Nav.js","components/Controller.js","Keyboard.js","components/Setting.js","App.js","serviceWorker.js","index.js"],"names":["truncatedMobileNet","model","layout","labelCol","span","wrapperCol","tailLayout","offset","loadTruncatedMobileNet","a","tf","mobilenet","layer","getLayer","inputs","outputs","output","sleep","time","Promise","resolve","setTimeout","controllerDataset","example","action","y","this","xs","ys","oldX","concat","oldY","dispose","Option","Select","isBuildingExample","Ai","props","exampleCleanHandler","setState","exampleList","clean","exampleHandler","state","propAction","canvasRef","img","fromPixels","smallImg","resizeNearestNeighbor","processedImg","expandDims","toFloat","div","sub","speed","_action","direction","console","log","addExample","predict","toPixels","smallCanvasRef","current","push","toDataURL","train","learnArgument","isTraining","Error","layers","flatten","inputShape","shape","slice","dense","units","hiddenUnits","activation","kernelInitializer","useBias","optimizer","adam","learnRate","compile","loss","batchSize","Math","floor","fit","epochs","callbacks","onBatchEnd","batch","logs","toFixed","onTrainEnd","onAi","isPredicting","embeddings","predictions","data","doAction","record","isRecording","learnForm","loading","training","createRef","prevProps","prevState","controller","spinning","className","ref","initialValues","onFinish","Item","label","name","value","type","htmlType","key","disabled","length","required","icon","AppstoreAddOutlined","ArrowLeftOutlined","onClick","ArrowRightOutlined","ArrowUpOutlined","size","grid","gutter","column","itemLayout","pagination","pageSize","dataSource","renderItem","title","actions","CloseOutlined","style","maxWidth","src","alt","Component","Nav","mode","to","SettingOutlined","href","target","rel","YoutubeOutlined","GithubOutlined","WeiboOutlined","curentOrientation","Keybord","handleKeyDown","event","onControl","keyName","handleKeyUp","keyboardBind","window","document","addEventListener","removeEventListener","isSupportedOrientaion","e","alpha","beta","gamma","Controller","deviceorientation","directionReverse","isAiControlling","zeroOrientation","bateDegree","fixedController","v","forwardPower","backwardPower","speedReverse","directionFix","fixContent","display","undefined","AimOutlined","checked","onChange","store","set","min","max","included","width","get","handleSetZeroOrientation","content","trigger","SlidersOutlined","onTouchStart","onTouchEnd","LeftOutlined","RightOutlined","UpOutlined","DownOutlined","Setting","onDisconnect","wsConnected","onSubmit","form","rules","message","tooltipVisible","App","connect","wsAddress","setting","wsavc","location","protocol","on","cameraEnabled","fbl","payload","playerBoxRef","appendChild","AvcPlayer","canvas","lightEnabled","disconnect","preventDefault","changeCamera","enable","send","changeLight","changeSetting","changeZeroSpeedRate","speedZeroRate","changeSpeed","speedRate","changeDirection","directionRate","switchContent","appRef","speedMax","host","isFullscreen","WSAvcPlayer","useWorker","navigate","Button","overlay","HomeOutlined","ControlOutlined","body","requestFullscreen","CompressOutlined","ExpandOutlined","exitFullscreen","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d6e54590.chunk.js","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport { Form, Button, Spin, InputNumber, List, Card, Select } from \"antd\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport { AppstoreAddOutlined, CloseOutlined, ArrowLeftOutlined, ArrowRightOutlined, ArrowUpOutlined } from \"@ant-design/icons\";\nimport {\n  layout,\n  tailLayout,\n  loadTruncatedMobileNet,\n  ControllerDataset,\n  sleep\n} from \"./unit\";\n\nlet truncatedMobileNet, model;\nconst controllerDataset = new ControllerDataset();\nconst { Option } = Select;\n\nlet isBuildingExample = false;\n\nexport default class Ai extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      learnForm: {},\n      exampleList: [],\n      loading: false,\n      training: false,\n      isPredicting: false,\n      isRecording: false,\n      loss: 0,\n      learnArgument: {\n        learnRate: 0.001,\n        batchSize: 0.4,\n        epochs: 20,\n        hiddenUnits: 100\n      }\n    };\n    this.smallCanvasRef = createRef();\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    truncatedMobileNet = await loadTruncatedMobileNet();\n    this.setState({ loading: false });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.action !== this.props.action &&\n      this.state.isRecording &&\n      !isBuildingExample\n    ) {\n      this.exampleHandler(this.props.action);\n    }\n  }\n\n  exampleCleanHandler = async () => {\n    this.setState({\n      exampleList: []\n    });\n    controllerDataset.clean();\n  };\n\n  exampleHandler = async action => {\n    isBuildingExample = true;\n    const {\n      state: { exampleList },\n      props: { action: propAction, canvasRef }\n    } = this;\n\n    const img = tf.browser.fromPixels(canvasRef);\n    const smallImg = img.resizeNearestNeighbor([224, 224]);\n    const processedImg = tf.tidy(() =>\n      smallImg\n        .expandDims(0)\n        .toFloat()\n        .div(127)\n        .sub(1)\n    );\n    const _action = action || propAction;\n    const { speed, direction } = _action;\n    console.log(\"example\", _action);\n    controllerDataset.addExample(truncatedMobileNet.predict(processedImg), [\n      speed,\n      direction\n    ]);\n    await tf.browser.toPixels(smallImg, this.smallCanvasRef.current);\n    exampleList.push({\n      img: this.smallCanvasRef.current.toDataURL(),\n      action: { speed, direction }\n    });\n    this.setState({ exampleList });\n    img.dispose();\n    isBuildingExample = false;\n  };\n\n  train = async learnArgument => {\n    this.setState({\n      isTraining: true\n    });\n    console.log(\"Learnning Argument\", learnArgument);\n    if (controllerDataset.xs == null) {\n      throw new Error(\"Add some examples before training!\");\n    }\n\n    // Creates a 2-layer fully connected model. By creating a separate model,\n    // rather than adding layers to the mobilenet model, we \"freeze\" the weights\n    // of the mobilenet model, and only train weights from the new model.\n    model = tf.sequential({\n      layers: [\n        // Flattens the input to a vector so we can use it in a dense layer. While\n        // technically a layer, this only performs a reshape (and has no training\n        // parameters).\n        tf.layers.flatten({\n          inputShape: truncatedMobileNet.outputs[0].shape.slice(1)\n        }),\n        // Layer 1.\n        tf.layers.dense({\n          units: learnArgument.hiddenUnits,\n          activation: \"relu\",\n          kernelInitializer: \"varianceScaling\",\n          useBias: true\n        }),\n        // Layer 2. The number of units of the last layer should correspond\n        // to the number of classes we want to predict.\n        tf.layers.dense({\n          units: 2,\n          kernelInitializer: \"varianceScaling\",\n          useBias: false,\n          activation: \"softmax\"\n        })\n      ]\n    });\n\n    // Creates the optimizers which drives training of the model.\n    const optimizer = tf.train.adam(learnArgument.learnRate);\n    // We use categoricalCrossentropy which is the loss function we use for\n    // categorical classification which measures the error between our predicted\n    // probability distribution over classes (probability that an input is of each\n    // class), versus the label (100% probability in the true class)>\n    model.compile({ optimizer: optimizer, loss: \"meanSquaredError\" });\n\n    // We parameterize batch size as a fraction of the entire dataset because the\n    // number of examples that are collected depends on how many examples the user\n    // collects. This allows us to have a flexible batch size.\n    const batchSize = Math.floor(\n      controllerDataset.xs.shape[0] * learnArgument.batchSize\n    );\n    if (!(batchSize > 0)) {\n      throw new Error(\n        `Batch size is 0 or NaN. Please choose a non-zero fraction.`\n      );\n    }\n\n    // Train the model! Model.fit() will shuffle xs & ys so we don't have to.\n    model.fit(controllerDataset.xs, controllerDataset.ys, {\n      batchSize,\n      epochs: learnArgument.epochs,\n      callbacks: {\n        onBatchEnd: async (batch, logs) => {\n          console.log(\"Loss: \" + logs.loss.toFixed(5));\n          this.setState({ loss: logs.loss.toFixed(5) });\n        },\n        onTrainEnd: logs => {\n          // const loss = logs.loss.toFixed(5);\n          // console.log(\"Train End Loss: \" + logs.loss.toFixed(5));\n          this.setState({\n            isTraining: false\n            // loss\n          });\n        }\n      }\n    });\n  };\n\n  predict = async () => {\n    const {\n      props: { canvasRef, onAi }\n    } = this;\n    onAi(true);\n    this.setState(\n      {\n        isPredicting: true\n      },\n      async () => {\n        while (this.state.isPredicting) {\n          await sleep(200);\n          const img = tf.tidy(() =>\n            tf.browser\n              .fromPixels(canvasRef)\n              .resizeNearestNeighbor([224, 224])\n              .expandDims(0)\n              .toFloat()\n              .div(127)\n              .sub(1)\n          );\n\n          // Make a prediction through mobilenet, getting the internal activation of\n          // the mobilenet model, i.e., \"embeddings\" of the input images.\n          const embeddings = truncatedMobileNet.predict(img);\n\n          // Make a prediction through our newly-trained model using the embeddings\n          // from mobilenet as input.\n          const predictions = model.predict(embeddings);\n\n          // Returns the index with the maximum probability. This number corresponds\n          // to the class the model thinks is the most probable given the input.\n\n          const [speed, direction] = await predictions.data();\n\n          const action = {\n            speed,\n            direction\n          };\n          console.log(\"Ai 动作：\", action);\n          img.dispose();\n\n          this.doAction(action);\n          await tf.nextFrame();\n        }\n        onAi(false);\n      }\n    );\n  };\n\n  record = async () => {\n    this.setState(\n      {\n        isRecording: true\n      }\n      // async () => {\n      //   while (this.state.isRecording) {\n      //     await this.exampleHandler();\n      //     await sleep(1000);\n      //   }\n      // }\n    );\n  };\n\n  async doAction({ speed, direction }) {\n    const {\n      props: { controller }\n    } = this;\n    controller.direction(direction);\n    // controller.speed(speed);\n  }\n\n  render() {\n    const {\n      state: {\n        exampleList,\n        loading,\n        isRecording,\n        isTraining,\n        isPredicting,\n        loss,\n        learnArgument\n      },\n      exampleHandler,\n      exampleCleanHandler,\n      record,\n      predict\n    } = this;\n\n    return (\n      <Spin spinning={loading}>\n        <canvas className=\"ai-canvas\" ref={this.smallCanvasRef}></canvas>\n        <Form {...layout} initialValues={learnArgument} onFinish={this.train}>\n          <Form.Item label=\"Learning rate\" name=\"learnRate\">\n            <InputNumber />\n          </Form.Item>\n          <Form.Item label=\"Batch Size\" name=\"batchSize\">\n            <Select>\n              <Option value={0.05}>0.05</Option>\n              <Option value={0.1}>0.1</Option>\n              <Option value={0.4}>0.4</Option>\n              <Option value={1}>1</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Epochs\" name=\"epochs\">\n            <Select>\n              <Option value={10}>10</Option>\n              <Option value={20}>20</Option>\n              <Option value={40}>40</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Hidden units\" name=\"hiddenUnits\">\n            <Select>\n              <Option value={100}>100</Option>\n              <Option value={200}>200</Option>\n              <Option value={300}>300</Option>\n              <Option value={400}>400</Option>\n              <Option value={500}>500</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"loss\">\n            <InputNumber value={loss} />\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              key=\"fit\"\n              loading={isTraining}\n              disabled={!exampleList.length}\n            >\n              学习\n            </Button>\n          </Form.Item>\n        </Form>\n        <Form\n          {...layout}\n          initialValues={{ speed: 0, direction: 0 }}\n          onFinish={action => exampleHandler(action)}\n        >\n          <Form.Item name=\"speed\" label=\"速度\" required>\n            <InputNumber />\n          </Form.Item>\n          <Form.Item name=\"direction\" label=\"方向\" required>\n            <InputNumber />\n          </Form.Item>\n          <Form.Item {...tailLayout} className=\"form-item-button\">\n            <Button\n              key=\"record-once\"\n              htmlType=\"submit\"\n              type=\"primary\"\n              icon={<AppstoreAddOutlined />}\n            />\n            <Button\n              type=\"primary\"\n              icon={<ArrowLeftOutlined />}\n              onClick={() => exampleHandler({ speed: 1, direction: 1 })}\n            />\n            <Button\n              type=\"primary\"\n              icon={<ArrowRightOutlined />}\n              onClick={() => exampleHandler({ speed: 1, direction: -1 })}\n            />\n            <Button\n              type=\"primary\"\n              icon={<ArrowUpOutlined />}\n              onClick={() => exampleHandler({ speed: 1, direction: 0 })}\n            />\n            <Button\n              type=\"primary\"\n              key=\"record\"\n              loading={isRecording}\n              onClick={record}\n            >\n              开始记录\n            </Button>\n            <Button\n              key=\"stop\"\n              onClick={() => {\n                this.setState({ isRecording: false });\n              }}\n              disabled={!isRecording}\n            >\n              停止记录\n            </Button>\n            <Button\n              type=\"danger\"\n              disabled={!exampleList.length}\n              onClick={exampleCleanHandler}\n            >\n              清除\n            </Button>\n          </Form.Item>\n          <Form.Item {...tailLayout} className=\"form-item-button\">\n            <Button\n              type=\"danger\"\n              key=\"predic\"\n              loading={isPredicting}\n              onClick={predict}\n            >\n              开始 Ai 驾驶\n            </Button>\n            <Button\n              onClick={() => {\n                this.setState({ isPredicting: false });\n              }}\n              disabled={!isPredicting}\n              key=\"stop\"\n            >\n              停止 Ai 驾驶\n            </Button>\n          </Form.Item>\n        </Form>\n        <List\n          size=\"small\"\n          className=\"ai-example-list\"\n          grid={{ gutter: 16, column: 4 }}\n          itemLayout=\"vertical\"\n          pagination={{\n            pageSize: 12\n          }}\n          dataSource={exampleList}\n          renderItem={({ img, action: { speed, direction } }) => (\n            <List.Item>\n              <Card\n                size=\"small\"\n                title={`速度：${speed}    方向：${direction}`}\n                actions={[\n                  <Button size=\"small\" icon={<CloseOutlined />} type=\"danger\" />\n                ]}\n              >\n                <img style={{ maxWidth: \"100%\" }} src={img} alt=\"example\" />\n              </Card>\n            </List.Item>\n          )}\n        />\n      </Spin>\n    );\n  }\n}\n","import * as tf from \"@tensorflow/tfjs\";\n\nexport const layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nexport const tailLayout = {\n  wrapperCol: { offset: 6, span: 16 }\n};\n\nexport const marks = {\n  0: \"0%\",\n  25: \"25%\",\n  50: \"50%\",\n  75: \"75%\",\n  100: \"100%\"\n};\n\nexport async function loadTruncatedMobileNet() {\n  const mobilenet = await tf.loadLayersModel(\n    \"https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_1.0_224/model.json\"\n  );\n  // Return a model that outputs an internal activation.\n  const layer = mobilenet.getLayer(\"conv_pw_13_relu\");\n  return tf.model({ inputs: mobilenet.inputs, outputs: layer.output });\n}\n\nexport class ControllerDataset {\n  /**\n   * Adds an example to the controller dataset.\n   * @param {Tensor} example A tensor representing the example. It can be an image,\n   *     an activation, or any other type of Tensor.\n   * @param {[number]} action speed and direction.\n   */\n  addExample(example, action) {\n    // One-hot encode the label.\n    const y = tf.tidy(() => tf.tensor2d(action, [1, 2]));\n\n    if (this.xs == null) {\n      // For the first example that gets added, keep example and y so that the\n      // ControllerDataset owns the memory of the inputs. This makes sure that\n      // if addExample() is called in a tf.tidy(), these Tensors will not get\n      // disposed.\n      this.xs = tf.keep(example);\n      this.ys = tf.keep(y);\n    } else {\n      const oldX = this.xs;\n      this.xs = tf.keep(oldX.concat(example, 0));\n\n      const oldY = this.ys;\n      this.ys = tf.keep(oldY.concat(y, 0));\n\n      oldX.dispose();\n      oldY.dispose();\n      y.dispose();\n    }\n  }\n  clean() {\n    this.xs.dispose();\n    this.ys.dispose();\n    this.xs = null;\n    this.ys = null;\n  }\n}\n\nexport async function sleep(time) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n}\n","import React from \"react\";\nimport { Menu } from \"antd\";\nimport { Link } from \"@reach/router\";\nimport { GithubOutlined, YoutubeOutlined, WeiboOutlined, SettingOutlined } from \"@ant-design/icons\";\n\nexport default function Nav(props) {\n  return (\n    <Menu mode=\"horizontal\" {...props}>\n      {/* <Menu.Item> */}\n      {/* <Link to=\"/\">控制</Link> */}\n      {/* </Menu.Item> */}\n      <Menu.Item>\n        <Link to=\"setting\"><SettingOutlined /> 设置</Link>\n      </Menu.Item>\n\n      <Menu.Item>\n        <a\n          href=\"https://space.bilibili.com/96740361\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <YoutubeOutlined /> up主EsonWong B站主页\n        </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a\n          href=\"https://github.com/itiwll/network-rc\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <GithubOutlined /> Github Network-rc\n        </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a\n          href=\"https://weibo.com/u/5034944416\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <WeiboOutlined /> 微博 Eson_Wong\n        </a>\n      </Menu.Item>\n      {/* <Menu.Item>\n        <Link to=\"ai\">Ai</Link>\n      </Menu.Item> */}\n    </Menu>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Switch, Slider, Popover } from \"antd\";\nimport { SlidersOutlined } from \"@ant-design/icons\";\nimport {\n  AimOutlined,\n  DownOutlined,\n  UpOutlined,\n  LeftOutlined,\n  RightOutlined,\n} from \"@ant-design/icons\";\nimport store from \"store\";\nimport Keybord from \"../Keyboard\";\n\nlet curentOrientation;\nlet isSupportedOrientaion = false;\nconst deviceorientation = (e) => {\n  const { alpha, beta, gamma } = e;\n  curentOrientation = { alpha, beta, gamma };\n  if (alpha || isSupportedOrientaion) {\n    isSupportedOrientaion = true;\n  }\n};\n\nwindow.addEventListener(\"deviceorientation\", deviceorientation);\n\nexport default class Controller extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zeroOrientation: undefined,\n      directionReverse: store.get(\"directionReverse\") || true,\n      speedReverse: store.get(\"speedReverse\") || false,\n      backwardPower: 50,\n      forwardPower: 50,\n      directionFix: store.get(\"directionFix\") || 0,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"deviceorientation\", this.deviceorientation);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"deviceorientation\",\n      this.handleSetZeroOrientation\n    );\n  }\n  deviceorientation = ({ alpha, beta, gamma }) => {\n    const {\n      props: { controller },\n      state: { directionReverse, isAiControlling, zeroOrientation },\n    } = this;\n    if (!zeroOrientation) return;\n    if (isAiControlling) return;\n    const { beta: baseBeta } = zeroOrientation;\n    let bateDegree = beta - baseBeta;\n    bateDegree = bateDegree < -30 ? -30 : bateDegree;\n    bateDegree = bateDegree > 30 ? 30 : bateDegree;\n    controller.direction((bateDegree / 30) * (directionReverse ? -1 : 1));\n  };\n\n  fixedController = {\n    speed: (v) => {\n      const {\n        props: {\n          controller: { speed },\n        },\n        state: { forwardPower, backwardPower, speedReverse },\n      } = this;\n      speed(\n        v *\n          (speedReverse ? -1 : 1) *\n          ((v > 0 ? forwardPower : backwardPower) / 100)\n      );\n    },\n    direction: (v) => {\n      const {\n        props: {\n          controller: { direction },\n        },\n        state: { directionReverse, directionFix },\n      } = this;\n      direction(v * (directionReverse ? -1 : 1) + directionFix);\n    },\n  };\n\n  fixContent = () => {\n    const { directionReverse, speedReverse, directionFix } = this.state;\n    return (\n      <Form>\n        <Form.Item\n          style={{ display: isSupportedOrientaion ? undefined : \"none\" }}\n        >\n          <Button\n            type=\"danger\"\n            onClick={() => {\n              this.setState({ zeroOrientation: { ...curentOrientation } });\n            }}\n            icon={<AimOutlined />}\n          >\n            舵机感应校准\n          </Button>\n        </Form.Item>\n        <Form.Item label=\"舵机反向\">\n          <Switch\n            checked={directionReverse}\n            onChange={(v) => {\n              this.setState({\n                directionReverse: v,\n              });\n              store.set(\"directionReverse\", v);\n            }}\n          />\n        </Form.Item>\n        <Form.Item label=\"油门反向\">\n          <Switch\n            checked={speedReverse}\n            onChange={(v) => {\n              this.setState({\n                speedReverse: v,\n              });\n              store.set(\"speedReverse\", v);\n            }}\n          />\n        </Form.Item>\n        <Form.Item label=\"舵机微调\">\n          <Slider\n            value={directionFix * 50 + 50}\n            min={0}\n            max={100}\n            included={false}\n            onChange={(v) => {\n              store.set(\"directionFix\", v / 100);\n              const directionFix = v / 50 - 1;\n              this.setState({ directionFix }, () => {\n                this.fixedController.direction(0);\n              });\n            }}\n            style={{ width: \"50vw\" }}\n          />\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  render() {\n    const {\n      fixContent,\n      fixedController: { speed, direction },\n    } = this;\n    const { forwardPower, backwardPower } = this.state;\n    return (\n      <div className=\"controller\">\n        <Form className=\"controller-form\" size=\"small\" layout=\"inline\">\n          <Form.Item>\n            <Popover content={fixContent} title=\"修正\" trigger=\"click\">\n              <Button icon={<SlidersOutlined />}>修正</Button>\n            </Popover>\n          </Form.Item>\n          <Button\n            className=\"left-button\"\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            onTouchStart={() => {\n              direction(1);\n            }}\n            onTouchEnd={() => {\n              direction(0);\n            }}\n            icon={<LeftOutlined />}\n            style={{ display: !isSupportedOrientaion ? undefined : \"none\" }}\n          ></Button>\n          <Button\n            className=\"right-button\"\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            onTouchStart={() => {\n              direction(-1);\n            }}\n            onTouchEnd={() => {\n              direction(0);\n            }}\n            icon={<RightOutlined />}\n            style={{ display: !isSupportedOrientaion ? undefined : \"none\" }}\n          ></Button>\n          <Button\n            className=\"forward-button\"\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            onTouchStart={() => {\n              speed(1);\n            }}\n            onTouchEnd={() => {\n              speed(0);\n            }}\n            icon={<UpOutlined />}\n          ></Button>\n          <Button\n            className=\"backward-button\"\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            onTouchStart={() => {\n              speed(-1);\n            }}\n            onTouchEnd={() => {\n              speed(0);\n            }}\n            icon={<DownOutlined />}\n          ></Button>\n\n          <Form.Item label=\"键盘\">wsad</Form.Item>\n          <Form.Item label=\"前进油门\">\n            <Slider\n              value={forwardPower}\n              min={0}\n              max={100}\n              onChange={(forwardPower) => {\n                this.setState({ forwardPower });\n              }}\n              style={{ width: \"15vw\" }}\n            />\n          </Form.Item>\n          <Form.Item label=\"倒退油门\">\n            <Slider\n              value={backwardPower}\n              min={0}\n              max={100}\n              style={{ width: \"15vw\" }}\n              onChange={(backwardPower) => {\n                this.setState({ backwardPower });\n              }}\n            />\n          </Form.Item>\n        </Form>\n        <Keybord controller={{ speed, direction }} />\n      </div>\n    );\n  }\n}\n","import React, { Component, createRef } from \"react\";\n\nexport default class Keybord extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = createRef();\n  }\n\n  componentDidMount() {\n    this.keyboardBind();\n  }\n\n  componentWillUnmount() {\n    const { handleKeyDown, handleKeyUp } = this;\n    window.document.removeEventListener(\"keydown\", handleKeyDown, false);\n    window.document.removeEventListener(\"keyup\", handleKeyUp, false);\n  }\n\n  handleKeyDown = (event) => {\n    const {\n      props: {\n        controller: { speed, direction },\n        onControl,\n      },\n    } = this;\n    const keyName = event.key;\n    if (keyName === \"w\") {\n      speed(1);\n    }\n    if (keyName === \"s\") {\n      speed(-1);\n    }\n    if (keyName === \"a\") {\n      direction(1);\n    }\n    if (keyName === \"d\") {\n      direction(-1);\n    }\n    onControl && onControl();\n  };\n\n  handleKeyUp = (event) => {\n    const {\n      props: {\n        controller: { speed, direction },\n        onControl,\n      },\n    } = this;\n    const keyName = event.key;\n    if (keyName === \"w\") {\n      speed(0);\n    }\n    if (keyName === \"s\") {\n      speed(0);\n    }\n    if (keyName === \"a\") {\n      direction(0);\n    }\n    if (keyName === \"d\") {\n      direction(0);\n    }\n    onControl && onControl();\n  };\n\n  keyboardBind = () => {\n    const { handleKeyDown, handleKeyUp } = this;\n    window.document.addEventListener(\"keydown\", handleKeyDown, false);\n    window.document.addEventListener(\"keyup\", handleKeyUp, false);\n  };\n\n  render() {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport { Slider, Form, Button, Input } from \"antd\";\nimport { layout, tailLayout } from \"../unit\";\n\nexport default function Setting({\n  onDisconnect,\n  wsConnected,\n  onSubmit,\n  ...form\n}) {\n  return (\n    <Form {...layout} onFinish={onSubmit} initialValues={form}>\n      <br />\n      <Form.Item\n        label=\"连接地址\"\n        name=\"wsAddress\"\n        rules={[{ required: true, message: \"请输入连接地址!\" }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"最大速度\" name=\"speedMax\">\n        <Slider min={0} max={100} tooltipVisible />\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          保存\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import React, { Component, createRef } from \"react\";\nimport store from \"store\";\nimport { InputNumber, Form, Switch, Dropdown, Button, Popover } from \"antd\";\nimport \"./App.css\";\nimport Ai from \"./Ai\";\nimport { Router, Location } from \"@reach/router\";\nimport Nav from \"./components/Nav\";\nimport Controller from \"./components/Controller\";\nimport Setting from \"./components/Setting\";\nimport WSAvcPlayer from \"ws-avc-player\";\nimport {\n  HomeOutlined,\n  ExpandOutlined,\n  CompressOutlined,\n  ControlOutlined,\n} from \"@ant-design/icons\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.appRef = createRef();\n    this.playerBoxRef = createRef();\n    this.state = {\n      setting: {\n        speedMax: 20,\n        wsAddress: window.location.host,\n        ...store.get(\"setting\"),\n      },\n      wsConnected: false,\n      cameraEnabled: false,\n      lightEnabled: false,\n      canvasRef: undefined,\n      isAiControlling: false,\n      isFullscreen: false,\n      action: {\n        speed: 0,\n        direction: 0,\n      },\n    };\n\n    this.controller = {\n      speed: (v) => {\n        const {\n          changeSpeed,\n          state: {\n            setting: { speedMax },\n            action,\n          },\n        } = this;\n        // let vAbs = Math.abs(v);\n        // if (vAbs > speedMax / 100) {\n        //   vAbs = speedMax / 100;\n        // }\n        // action.speed = v > 0 ? vAbs : -vAbs;\n        action.speed = (v * speedMax) / 100;\n        this.setState({ action: { ...action } });\n        changeSpeed(action.speed);\n      },\n      direction: (v) => {\n        const {\n          changeDirection,\n          state: { action },\n        } = this;\n        action.direction = v;\n        changeDirection(v);\n        this.setState({ action: { ...action } });\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { connect } = this;\n    this.wsavc = new WSAvcPlayer({ useWorker: true });\n    connect();\n  }\n\n  connect = () => {\n    const { wsAddress } = this.state.setting;\n    this.wsavc.connect(\n      `${\n        window.location.protocol === \"https:\" ? \"wss://\" : \"ws://\"\n      }${wsAddress}`\n    );\n    this.wsavc.on(\"disconnected\", () => {\n      console.log(\"WS disconnected\");\n      this.setState({ wsConnected: false, cameraEnabled: false });\n    });\n    this.wsavc.on(\"connected\", () => {\n      console.log(\"WS connected\");\n      this.setState({ wsConnected: true });\n    });\n    this.wsavc.on(\"frame_shift\", (fbl) => {\n      // console.log(\"Stream frame shift: \", fbl);\n    });\n    this.wsavc.on(\"resized\", (payload) => {\n      console.log(\"resized\", payload);\n    });\n    this.wsavc.on(\"stream_active\", (cameraEnabled) => {\n      console.log(\"Stream is \", cameraEnabled ? \"active\" : \"offline\");\n      if (cameraEnabled) {\n        this.playerBoxRef.current.appendChild(this.wsavc.AvcPlayer.canvas);\n      }\n      this.setState({ cameraEnabled });\n    });\n\n    this.wsavc.on(\"light enabled\", (lightEnabled) => {\n      this.setState({ lightEnabled });\n    });\n  };\n\n  disconnect = (e) => {\n    e && e.preventDefault();\n    this.setState({ wsConnected: false });\n    if (!this.wsavc) return;\n    this.wsavc.disconnect();\n  };\n\n  changeCamera = (enable) => {\n    if (!this.wsavc) return;\n    this.wsavc.send(\"open camera\", enable);\n  };\n\n  changeLight = (enable) => {\n    if (!this.wsavc) return;\n    this.wsavc.send(\"open light\", enable);\n  };\n\n  changeSetting = (setting) => {\n    this.setState({ setting });\n    store.set(\"setting\", setting);\n    // this.connect();\n  };\n\n  changeZeroSpeedRate = (speedZeroRate) => {\n    if (!this.state.wsConnected) return;\n    this.wsavc.send(\"speed zero rate\", speedZeroRate);\n    this.setState({ speedZeroRate });\n  };\n\n  changeSpeed = (speedRate) => {\n    if (!this.state.wsConnected) return;\n    this.wsavc.send(\"speed rate\", speedRate);\n  };\n\n  changeDirection = (directionRate) => {\n    if (!this.state.wsConnected) return;\n    this.wsavc.send(\"direction rate\", directionRate);\n  };\n\n  switchContent = () => {\n    const {\n      changeCamera,\n      changeLight,\n      state: { lightEnabled, cameraEnabled },\n    } = this;\n    return (\n      <Form>\n        <Form.Item label=\"摄像头\">\n          <Switch checked={cameraEnabled} onChange={changeCamera} />\n        </Form.Item>\n        <Form.Item label=\"车灯\">\n          <Switch checked={lightEnabled} onChange={changeLight} />\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  render() {\n    const {\n      disconnect,\n      connect,\n      controller,\n      changeSetting,\n      switchContent,\n      state: {\n        setting,\n        wsConnected,\n        cameraEnabled,\n        canvasRef,\n        action,\n        isFullscreen,\n      },\n    } = this;\n    return (\n      <div className=\"App\" ref={this.appRef}>\n        <Form layout=\"inline\" className=\"app-status\" size=\"small\">\n          <Form.Item>\n            <Location>\n              {({ navigate }) => (\n                <Dropdown.Button\n                  overlay={Nav}\n                  onClick={() => navigate(\"/\")}\n                  type=\"primary\"\n                >\n                  <HomeOutlined /> 控制\n                </Dropdown.Button>\n              )}\n            </Location>\n          </Form.Item>\n          <Form.Item label=\"连接\">\n            <Switch\n              checked={wsConnected}\n              onChange={(v) => {\n                if (v) connect();\n                else disconnect();\n              }}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Popover content={switchContent} title=\"开关\" trigger=\"click\">\n              <Button icon={<ControlOutlined />}>开关</Button>\n            </Popover>\n          </Form.Item>\n\n          <Form.Item label=\"舵机\">\n            <InputNumber value={action.direction} />\n          </Form.Item>\n          <Form.Item label=\"电调\">\n            <InputNumber value={action.speed} />\n          </Form.Item>\n\n          {document.body.requestFullscreen && (\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                shape=\"circle\"\n                icon={isFullscreen ? <CompressOutlined /> : <ExpandOutlined />}\n                onClick={() => {\n                  if (isFullscreen) {\n                    document.exitFullscreen();\n                  } else {\n                    document.body.requestFullscreen();\n                  }\n                  this.setState({ isFullscreen: !isFullscreen });\n                }}\n              ></Button>\n            </Form.Item>\n          )}\n        </Form>\n\n        <Router className=\"app-page\">\n          <Controller path=\"/\" controller={controller} />\n          <Setting\n            path=\"setting\"\n            {...setting}\n            wsConnected={wsConnected}\n            onDisconnect={disconnect}\n            onSubmit={changeSetting}\n          />\n          <Ai\n            path=\"ai\"\n            canvasRef={canvasRef}\n            action={action}\n            controller={controller}\n            onAi={(isAiControlling) => this.setState({ isAiControlling })}\n          />\n        </Router>\n        <div\n          className=\"player-box\"\n          ref={this.playerBoxRef}\n          style={{ display: cameraEnabled ? \"flex\" : \"none\" }}\n        ></div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}