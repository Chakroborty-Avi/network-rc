{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["current","TabPane","Tabs","window","addEventListener","event","alpha","beta","gamma","layout","labelCol","span","wrapperCol","tailLayout","offset","App","props","deviceorientation","changeSpeed","changeDirection","state","hold","base","baseGamma","baseBeta","directionReverse","speedZeroRate","speedMaxRate","speedReverseMaxRate","bateDegree","gamaDegree","keyboardBind","document","wsConnected","keyName","key","connectWs","wsAddress","socket","close","undefined","io","on","setState","changeZeroSpeedRate","store","set","disconnectWs","e","preventDefault","handleHold","emit","speedRate","directionRate","direction","appRef","React","createRef","speed","get","this","className","ref","Item","label","checked","disabled","onChange","v","requestFullscreen","exitFullscreen","value","min","max","style","width","margin","tabPosition","tab","onFinish","initialValues","name","rules","required","message","type","onClick","htmlType","shape","size","onTouchStart","onTouchEnd","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.14ba5da6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport store from \"store\";\n\nimport { InputNumber, Form, Switch, Input, Button, Slider, Tabs } from \"antd\";\nimport \"./App.css\";\n\nconst { TabPane } = Tabs;\nlet current;\nwindow.addEventListener(\"deviceorientation\", event => {\n  const { alpha, beta, gamma } = event;\n  current = { alpha, beta, gamma };\n});\n\nconst layout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nconst tailLayout = {\n  wrapperCol: { offset: 4, span: 16 }\n};\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.appRef = React.createRef();\n    this.state = {\n      hold: false,\n      speed: 0,\n      direction: 0,\n      base: {\n        alpha: undefined,\n        beta: undefined,\n        gamma: undefined\n      },\n      speedMaxRate: store.get(\"speedMaxRate\") || 80,\n      speedReverseMaxRate: store.get(\"speedReverseMaxRate\") || 70,\n      speedZeroRate: store.get(\"speedZeroRate\") || 75,\n      speedRate: 0,\n      directionReverse: store.get(\"directionReverse\") || true,\n      wsConnected: false,\n      wsAddress: store.get(\"wsAddress\")\n    };\n  }\n\n  componentDidMount() {\n    const {\n      deviceorientation,\n      keyboardBind,\n      connectWs,\n      state: { wsAddress }\n    } = this;\n    window.addEventListener(\n      \"deviceorientation\",\n      event => {\n        deviceorientation();\n      },\n      false\n    );\n    keyboardBind();\n    connectWs({ wsAddress });\n  }\n\n  deviceorientation = () => {\n    const {\n      changeSpeed,\n      changeDirection,\n      state: {\n        hold,\n        base: { gamma: baseGamma, beta: baseBeta },\n        directionReverse,\n        speedZeroRate,\n        speedMaxRate,\n        speedReverseMaxRate\n      }\n    } = this;\n    let bateDegree = current.beta - baseBeta;\n    bateDegree = bateDegree < -30 ? -30 : bateDegree;\n    bateDegree = bateDegree > 30 ? 30 : bateDegree;\n    const directionRate =\n      (directionReverse ? -bateDegree / 30 : bateDegree / 30) * 5 + 7.5;\n    changeDirection(directionRate);\n\n    if (!hold) return;\n    let gamaDegree = current.gamma - baseGamma;\n    gamaDegree = gamaDegree < -30 ? -30 : gamaDegree;\n    gamaDegree = gamaDegree > 30 ? 30 : gamaDegree;\n    const speedRate =\n      gamaDegree > 0\n        ? (gamaDegree / 30) * (speedMaxRate - speedZeroRate) + speedZeroRate\n        : speedZeroRate +\n          (gamaDegree / 30) * (speedZeroRate - speedReverseMaxRate);\n    changeSpeed(speedRate);\n  };\n\n  keyboardBind = () => {\n    const { changeDirection, changeSpeed } = this;\n    document.addEventListener(\n      \"keydown\",\n      event => {\n        const {\n          state: { wsConnected, speedMaxRate, speedReverseMaxRate }\n        } = this;\n        if (!wsConnected) return;\n        const keyName = event.key;\n        if (keyName === \"w\") {\n          changeSpeed(speedMaxRate);\n        }\n        if (keyName === \"s\") {\n          changeSpeed(speedReverseMaxRate);\n        }\n        if (keyName === \"a\") {\n          changeDirection(12.5);\n        }\n        if (keyName === \"d\") {\n          changeDirection(2.5);\n        }\n      },\n      false\n    );\n    document.addEventListener(\n      \"keyup\",\n      event => {\n        const {\n          state: { wsConnected, speedZeroRate }\n        } = this;\n        if (!wsConnected) return;\n        const keyName = event.key;\n        if (keyName === \"w\") {\n          changeSpeed(speedZeroRate);\n        }\n        if (keyName === \"s\") {\n          changeSpeed(speedZeroRate);\n        }\n        if (keyName === \"a\") {\n          changeDirection(7.5);\n        }\n        if (keyName === \"d\") {\n          changeDirection(7.5);\n        }\n      },\n      false\n    );\n  };\n\n  connectWs = ({ wsAddress }) => {\n    if (this.socket) {\n      this.socket.close();\n      this.socket = undefined;\n    }\n\n    this.socket = window.io(wsAddress);\n    this.socket.on(\"connect\", () => {\n      this.setState({ wsConnected: true });\n      this.changeZeroSpeedRate(this.state.speedZeroRate);\n      store.set(\"wsAddress\", wsAddress);\n    });\n    this.socket.on(\"disconnect\", () => {\n      this.setState({ wsConnected: false });\n    });\n  };\n\n  disconnectWs = e => {\n    e && e.preventDefault();\n    this.socket.close();\n  };\n\n  handleHold = (hold = false) => {\n    if (!hold) {\n      this.socket.emit(\"speed rate\", 0);\n      this.socket.emit(\"direction rate\", 0);\n    }\n    this.setState({\n      hold,\n      base: { ...current }\n    });\n  };\n\n  changeZeroSpeedRate = speedZeroRate => {\n    if (!this.state.wsConnected) return;\n    this.socket.emit(\"speed zero rate\", speedZeroRate);\n    this.setState({ speedZeroRate });\n  };\n\n  changeSpeed = speedRate => {\n    if (!this.state.wsConnected) return;\n    this.socket.emit(\"speed rate\", speedRate);\n    this.setState({ speedRate });\n  };\n\n  changeDirection = directionRate => {\n    if (!this.state.wsConnected) return;\n    this.socket.emit(\"direction rate\", directionRate);\n    this.setState({ direction: directionRate });\n  };\n\n  render() {\n    const {\n      connectWs,\n      disconnectWs,\n      changeSpeed,\n      changeDirection,\n      state: {\n        wsConnected,\n        hold,\n        directionReverse,\n        direction,\n        speedReverseMaxRate,\n        speedMaxRate,\n        speedZeroRate,\n        speedRate,\n        wsAddress\n      }\n    } = this;\n    return (\n      <div className=\"App\" ref={this.appRef}>\n        <Form layout=\"inline\" className=\"status\">\n          <Form.Item label=\"连接状态\">\n            <Switch checked={wsConnected} disabled />\n          </Form.Item>\n          <Form.Item label=\"全屏\">\n            <Switch\n              onChange={v => {\n                if (v) {\n                  this.appRef.current.requestFullscreen();\n                } else {\n                  window.document.exitFullscreen();\n                }\n              }}\n            />\n          </Form.Item>\n          <Form.Item label=\"方向感应控制\">\n            <Switch checked={hold} disabled />\n          </Form.Item>\n          <Form.Item label=\"舵机\">\n            <Slider\n              value={direction}\n              min={0}\n              max={100}\n              onChange={changeDirection}\n              style={{ width: \"10vw\" }}\n            />\n          </Form.Item>\n          <Form.Item label=\"舵机 PWM\">\n            <InputNumber\n              min={0}\n              max={20}\n              style={{ margin: \"0 16px\" }}\n              value={direction}\n              onChange={changeDirection}\n            />\n          </Form.Item>\n          <Form.Item label=\"电调\">\n            <Slider\n              value={speedRate}\n              min={0}\n              max={100}\n              onChange={changeSpeed}\n              style={{ width: \"10vw\" }}\n            />\n          </Form.Item>\n          <Form.Item label=\"电调 PWM\">\n            <InputNumber\n              min={0}\n              max={100}\n              style={{ margin: \"0 16px\" }}\n              value={speedRate}\n              onChange={changeSpeed}\n            />\n          </Form.Item>\n        </Form>\n        <Tabs tabPosition=\"left\">\n          <TabPane tab=\"连接\" key={1}>\n            <Form\n              {...layout}\n              onFinish={connectWs}\n              initialValues={{ wsAddress }}\n            >\n              <br />\n              <Form.Item\n                label=\"连接地址\"\n                name=\"wsAddress\"\n                rules={[{ required: true, message: \"请输入连接地址!\" }]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item label=\"电调 0 功率 PWM 空占比\">\n                <InputNumber\n                  value={speedZeroRate}\n                  min={0}\n                  max={100}\n                  onChange={v => {\n                    this.changeZeroSpeedRate(v);\n                    store.set(\"speedZeroRate\", v);\n                  }}\n                />\n              </Form.Item>\n              <Form.Item label=\"电调输出最大功率 PWM 空占比\">\n                <InputNumber\n                  value={speedMaxRate}\n                  min={0}\n                  max={100}\n                  onChange={v => {\n                    this.setState({\n                      speedMaxRate: v\n                    });\n                    store.set(\"speedMaxRate\", v);\n                  }}\n                />\n              </Form.Item>\n              <Form.Item label=\"电调反向输出最大功率 PWM 空占比\">\n                <InputNumber\n                  value={speedReverseMaxRate}\n                  min={0}\n                  max={100}\n                  onChange={v => {\n                    this.setState({\n                      speedReverseMaxRate: v\n                    });\n                    store.set(\"speedReverseMaxRate\", v);\n                  }}\n                />\n              </Form.Item>\n              <Form.Item {...tailLayout}>\n                {wsConnected ? (\n                  <Button type=\"danger\" onClick={disconnectWs}>\n                    断开\n                  </Button>\n                ) : (\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    连接\n                  </Button>\n                )}\n              </Form.Item>\n            </Form>\n          </TabPane>\n          <TabPane tab=\"键盘控制\" key={2}>\n            <Form {...layout}></Form>\n          </TabPane>\n          <TabPane tab=\"方向感应控制\" key={3}>\n            <Form {...layout}>\n              <Form.Item label=\"舵机反向\">\n                <Switch\n                  checked={directionReverse}\n                  onChange={v => {\n                    this.setState({\n                      directionReverse: v\n                    });\n                  }}\n                />\n              </Form.Item>\n              <Form.Item {...tailLayout}>\n                <Button\n                  type=\"danger\"\n                  onClick={() => {\n                    this.setState({ base: { ...current } });\n                  }}\n                >\n                  归零校准\n                </Button>\n              </Form.Item>\n\n              <Button\n                className=\"hold-button\"\n                shape=\"circle\"\n                size=\"large\"\n                type=\"primary\"\n                onTouchStart={() => {\n                  this.setState({ hold: true });\n                }}\n                onTouchEnd={() => {\n                  this.setState({ hold: false });\n                  this.changeSpeed(speedZeroRate);\n                  this.changeDirection(0);\n                }}\n              >\n                启动\n              </Button>\n            </Form>\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}