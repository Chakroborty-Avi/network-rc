{"version":3,"sources":["Ai.js","Keyboard.js","Player.js","unit.js","components/Nav.js","components/Controller.js","components/Setting.js","App.js","serviceWorker.js","index.js"],"names":["truncatedMobileNet","model","Keybord","props","keyboardBind","controller","speed","direction","onControl","window","document","addEventListener","event","keyName","key","ref","createRef","this","Component","Player","setCanvasRef","canvasRef","nextProps","disabled","disconnect","connect","address","wsavc","WSAvcPlayer","location","protocol","playStream","initCanvas","undefined","className","layout","labelCol","span","wrapperCol","tailLayout","offset","loadTruncatedMobileNet","a","tf","mobilenet","layer","getLayer","inputs","outputs","output","sleep","time","Promise","resolve","setTimeout","controllerDataset","example","action","y","xs","ys","oldX","concat","oldY","dispose","Option","Select","isBuildingExample","Ai","exampleCleanHandler","setState","exampleList","clean","exampleHandler","state","propAction","img","fromPixels","smallImg","resizeNearestNeighbor","processedImg","expandDims","toFloat","div","sub","_action","console","log","addExample","predict","toPixels","smallCanvasRef","current","push","toDataURL","train","learnArgument","isTraining","Error","layers","flatten","inputShape","shape","slice","dense","units","hiddenUnits","activation","kernelInitializer","useBias","optimizer","adam","learnRate","compile","loss","batchSize","Math","floor","fit","epochs","callbacks","onBatchEnd","batch","logs","toFixed","onTrainEnd","onAi","isPredicting","embeddings","predictions","data","doAction","record","isRecording","learnForm","loading","training","prevProps","prevState","spinning","initialValues","onFinish","Item","label","name","value","type","htmlType","length","required","icon","AppstoreAddOutlined","ArrowLeftOutlined","onClick","ArrowRightOutlined","ArrowUpOutlined","size","grid","gutter","column","itemLayout","pagination","pageSize","dataSource","renderItem","title","actions","CloseOutlined","style","maxWidth","src","alt","Nav","mode","to","curentOrientation","e","alpha","beta","gamma","Controller","deviceorientation","directionReverse","isAiControlling","zeroOrientation","bateDegree","store","get","backwardPower","forwardPower","removeEventListener","handleSetZeroOrientation","AimOutlined","checked","onChange","v","set","onTouchStart","onTouchEnd","LeftOutlined","RightOutlined","UpOutlined","DownOutlined","min","max","width","Setting","onDisconnect","wsConnected","onSubmit","form","speedZeroRate","rules","message","included","tooltipVisible","App","connectWs","wsAddress","playerWsAddress","socket","close","io","on","changeZeroSpeedRate","disconnectWs","preventDefault","changeSetting","setting","emit","changeSpeed","speedRate","changeDirection","directionRate","appRef","React","speedMaxRate","speedReverseMaxRate","playerEnabled","rate","ExpandOutlined","el","requestFullscreen","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.62d21c49.chunk.js","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport { Form, Button, Spin, InputNumber, List, Card, Select } from \"antd\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport { AppstoreAddOutlined, CloseOutlined, ArrowLeftOutlined, ArrowRightOutlined, ArrowUpOutlined } from \"@ant-design/icons\";\nimport {\n  layout,\n  tailLayout,\n  loadTruncatedMobileNet,\n  ControllerDataset,\n  sleep\n} from \"./unit\";\n\nlet truncatedMobileNet, model;\nconst controllerDataset = new ControllerDataset();\nconst { Option } = Select;\n\nlet isBuildingExample = false;\n\nexport default class Ai extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      learnForm: {},\n      exampleList: [],\n      loading: false,\n      training: false,\n      isPredicting: false,\n      isRecording: false,\n      loss: 0,\n      learnArgument: {\n        learnRate: 0.001,\n        batchSize: 0.4,\n        epochs: 20,\n        hiddenUnits: 100\n      }\n    };\n    this.smallCanvasRef = createRef();\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    truncatedMobileNet = await loadTruncatedMobileNet();\n    this.setState({ loading: false });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.action !== this.props.action &&\n      this.state.isRecording &&\n      !isBuildingExample\n    ) {\n      this.exampleHandler(this.props.action);\n    }\n  }\n\n  exampleCleanHandler = async () => {\n    this.setState({\n      exampleList: []\n    });\n    controllerDataset.clean();\n  };\n\n  exampleHandler = async action => {\n    isBuildingExample = true;\n    const {\n      state: { exampleList },\n      props: { action: propAction, canvasRef }\n    } = this;\n\n    const img = tf.browser.fromPixels(canvasRef);\n    const smallImg = img.resizeNearestNeighbor([224, 224]);\n    const processedImg = tf.tidy(() =>\n      smallImg\n        .expandDims(0)\n        .toFloat()\n        .div(127)\n        .sub(1)\n    );\n    const _action = action || propAction;\n    const { speed, direction } = _action;\n    console.log(\"example\", _action);\n    controllerDataset.addExample(truncatedMobileNet.predict(processedImg), [\n      speed,\n      direction\n    ]);\n    await tf.browser.toPixels(smallImg, this.smallCanvasRef.current);\n    exampleList.push({\n      img: this.smallCanvasRef.current.toDataURL(),\n      action: { speed, direction }\n    });\n    this.setState({ exampleList });\n    img.dispose();\n    isBuildingExample = false;\n  };\n\n  train = async learnArgument => {\n    this.setState({\n      isTraining: true\n    });\n    console.log(\"Learnning Argument\", learnArgument);\n    if (controllerDataset.xs == null) {\n      throw new Error(\"Add some examples before training!\");\n    }\n\n    // Creates a 2-layer fully connected model. By creating a separate model,\n    // rather than adding layers to the mobilenet model, we \"freeze\" the weights\n    // of the mobilenet model, and only train weights from the new model.\n    model = tf.sequential({\n      layers: [\n        // Flattens the input to a vector so we can use it in a dense layer. While\n        // technically a layer, this only performs a reshape (and has no training\n        // parameters).\n        tf.layers.flatten({\n          inputShape: truncatedMobileNet.outputs[0].shape.slice(1)\n        }),\n        // Layer 1.\n        tf.layers.dense({\n          units: learnArgument.hiddenUnits,\n          activation: \"relu\",\n          kernelInitializer: \"varianceScaling\",\n          useBias: true\n        }),\n        // Layer 2. The number of units of the last layer should correspond\n        // to the number of classes we want to predict.\n        tf.layers.dense({\n          units: 2,\n          kernelInitializer: \"varianceScaling\",\n          useBias: false,\n          activation: \"softmax\"\n        })\n      ]\n    });\n\n    // Creates the optimizers which drives training of the model.\n    const optimizer = tf.train.adam(learnArgument.learnRate);\n    // We use categoricalCrossentropy which is the loss function we use for\n    // categorical classification which measures the error between our predicted\n    // probability distribution over classes (probability that an input is of each\n    // class), versus the label (100% probability in the true class)>\n    model.compile({ optimizer: optimizer, loss: \"meanSquaredError\" });\n\n    // We parameterize batch size as a fraction of the entire dataset because the\n    // number of examples that are collected depends on how many examples the user\n    // collects. This allows us to have a flexible batch size.\n    const batchSize = Math.floor(\n      controllerDataset.xs.shape[0] * learnArgument.batchSize\n    );\n    if (!(batchSize > 0)) {\n      throw new Error(\n        `Batch size is 0 or NaN. Please choose a non-zero fraction.`\n      );\n    }\n\n    // Train the model! Model.fit() will shuffle xs & ys so we don't have to.\n    model.fit(controllerDataset.xs, controllerDataset.ys, {\n      batchSize,\n      epochs: learnArgument.epochs,\n      callbacks: {\n        onBatchEnd: async (batch, logs) => {\n          console.log(\"Loss: \" + logs.loss.toFixed(5));\n          this.setState({ loss: logs.loss.toFixed(5) });\n        },\n        onTrainEnd: logs => {\n          // const loss = logs.loss.toFixed(5);\n          // console.log(\"Train End Loss: \" + logs.loss.toFixed(5));\n          this.setState({\n            isTraining: false\n            // loss\n          });\n        }\n      }\n    });\n  };\n\n  predict = async () => {\n    const {\n      props: { canvasRef, onAi }\n    } = this;\n    onAi(true);\n    this.setState(\n      {\n        isPredicting: true\n      },\n      async () => {\n        while (this.state.isPredicting) {\n          await sleep(200);\n          const img = tf.tidy(() =>\n            tf.browser\n              .fromPixels(canvasRef)\n              .resizeNearestNeighbor([224, 224])\n              .expandDims(0)\n              .toFloat()\n              .div(127)\n              .sub(1)\n          );\n\n          // Make a prediction through mobilenet, getting the internal activation of\n          // the mobilenet model, i.e., \"embeddings\" of the input images.\n          const embeddings = truncatedMobileNet.predict(img);\n\n          // Make a prediction through our newly-trained model using the embeddings\n          // from mobilenet as input.\n          const predictions = model.predict(embeddings);\n\n          // Returns the index with the maximum probability. This number corresponds\n          // to the class the model thinks is the most probable given the input.\n\n          const [speed, direction] = await predictions.data();\n\n          const action = {\n            speed,\n            direction\n          };\n          console.log(\"Ai 动作：\", action);\n          img.dispose();\n\n          this.doAction(action);\n          await tf.nextFrame();\n        }\n        onAi(false);\n      }\n    );\n  };\n\n  record = async () => {\n    this.setState(\n      {\n        isRecording: true\n      }\n      // async () => {\n      //   while (this.state.isRecording) {\n      //     await this.exampleHandler();\n      //     await sleep(1000);\n      //   }\n      // }\n    );\n  };\n\n  async doAction({ speed, direction }) {\n    const {\n      props: { controller }\n    } = this;\n    controller.direction(direction);\n    // controller.speed(speed);\n  }\n\n  render() {\n    const {\n      state: {\n        exampleList,\n        loading,\n        isRecording,\n        isTraining,\n        isPredicting,\n        loss,\n        learnArgument\n      },\n      exampleHandler,\n      exampleCleanHandler,\n      record,\n      predict\n    } = this;\n\n    return (\n      <Spin spinning={loading}>\n        <canvas className=\"ai-canvas\" ref={this.smallCanvasRef}></canvas>\n        <Form {...layout} initialValues={learnArgument} onFinish={this.train}>\n          <Form.Item label=\"Learning rate\" name=\"learnRate\">\n            <InputNumber />\n          </Form.Item>\n          <Form.Item label=\"Batch Size\" name=\"batchSize\">\n            <Select>\n              <Option value={0.05}>0.05</Option>\n              <Option value={0.1}>0.1</Option>\n              <Option value={0.4}>0.4</Option>\n              <Option value={1}>1</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Epochs\" name=\"epochs\">\n            <Select>\n              <Option value={10}>10</Option>\n              <Option value={20}>20</Option>\n              <Option value={40}>40</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Hidden units\" name=\"hiddenUnits\">\n            <Select>\n              <Option value={100}>100</Option>\n              <Option value={200}>200</Option>\n              <Option value={300}>300</Option>\n              <Option value={400}>400</Option>\n              <Option value={500}>500</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"loss\">\n            <InputNumber value={loss} />\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              key=\"fit\"\n              loading={isTraining}\n              disabled={!exampleList.length}\n            >\n              学习\n            </Button>\n          </Form.Item>\n        </Form>\n        <Form\n          {...layout}\n          initialValues={{ speed: 0, direction: 0 }}\n          onFinish={action => exampleHandler(action)}\n        >\n          <Form.Item name=\"speed\" label=\"速度\" required>\n            <InputNumber />\n          </Form.Item>\n          <Form.Item name=\"direction\" label=\"方向\" required>\n            <InputNumber />\n          </Form.Item>\n          <Form.Item {...tailLayout} className=\"form-item-button\">\n            <Button\n              key=\"record-once\"\n              htmlType=\"submit\"\n              type=\"primary\"\n              icon={<AppstoreAddOutlined />}\n            />\n            <Button\n              type=\"primary\"\n              icon={<ArrowLeftOutlined />}\n              onClick={() => exampleHandler({ speed: 1, direction: 1 })}\n            />\n            <Button\n              type=\"primary\"\n              icon={<ArrowRightOutlined />}\n              onClick={() => exampleHandler({ speed: 1, direction: -1 })}\n            />\n            <Button\n              type=\"primary\"\n              icon={<ArrowUpOutlined />}\n              onClick={() => exampleHandler({ speed: 1, direction: 0 })}\n            />\n            <Button\n              type=\"primary\"\n              key=\"record\"\n              loading={isRecording}\n              onClick={record}\n            >\n              开始记录\n            </Button>\n            <Button\n              key=\"stop\"\n              onClick={() => {\n                this.setState({ isRecording: false });\n              }}\n              disabled={!isRecording}\n            >\n              停止记录\n            </Button>\n            <Button\n              type=\"danger\"\n              disabled={!exampleList.length}\n              onClick={exampleCleanHandler}\n            >\n              清除\n            </Button>\n          </Form.Item>\n          <Form.Item {...tailLayout} className=\"form-item-button\">\n            <Button\n              type=\"danger\"\n              key=\"predic\"\n              loading={isPredicting}\n              onClick={predict}\n            >\n              开始 Ai 驾驶\n            </Button>\n            <Button\n              onClick={() => {\n                this.setState({ isPredicting: false });\n              }}\n              disabled={!isPredicting}\n              key=\"stop\"\n            >\n              停止 Ai 驾驶\n            </Button>\n          </Form.Item>\n        </Form>\n        <List\n          size=\"small\"\n          className=\"ai-example-list\"\n          grid={{ gutter: 16, column: 4 }}\n          itemLayout=\"vertical\"\n          pagination={{\n            pageSize: 12\n          }}\n          dataSource={exampleList}\n          renderItem={({ img, action: { speed, direction } }) => (\n            <List.Item>\n              <Card\n                size=\"small\"\n                title={`速度：${speed}    方向：${direction}`}\n                actions={[\n                  <Button size=\"small\" icon={<CloseOutlined />} type=\"danger\" />\n                ]}\n              >\n                <img style={{ maxWidth: \"100%\" }} src={img} alt=\"example\" />\n              </Card>\n            </List.Item>\n          )}\n        />\n      </Spin>\n    );\n  }\n}\n","import React, { Component, createRef } from \"react\";\n\nexport default class Keybord extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = createRef();\n  }\n\n  componentDidMount() {\n    this.keyboardBind();\n  }\n\n  keyboardBind = () => {\n    const {\n      props: {\n        controller: { speed, direction },\n        onControl\n      }\n    } = this;\n    window.document.addEventListener(\n      \"keydown\",\n      event => {\n        const keyName = event.key;\n        if (keyName === \"w\") {\n          speed(1);\n        }\n        if (keyName === \"s\") {\n          speed(-1);\n        }\n        if (keyName === \"a\") {\n          direction(1);\n        }\n        if (keyName === \"d\") {\n          direction(-1);\n        }\n        onControl && onControl();\n      },\n      false\n    );\n    window.document.addEventListener(\n      \"keyup\",\n      event => {\n        const {\n          props: {\n            controller: { speed, direction },\n            onControl\n          }\n        } = this;\n        const keyName = event.key;\n        if (keyName === \"w\") {\n          speed(0);\n        }\n        if (keyName === \"s\") {\n          speed(0);\n        }\n        if (keyName === \"a\") {\n          direction(0);\n        }\n        if (keyName === \"d\") {\n          direction(0);\n        }\n        onControl && onControl();\n      },\n      false\n    );\n  };\n\n  render() {\n    return <div></div>;\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Player extends Component {\n  constructor(props) {\n    super(props);\n    this.setCanvasRef = ref => {\n      this.canvasRef = ref;\n      props.setCanvasRef && props.setCanvasRef(ref);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.disabled !== this.props.disabled) {\n      if (nextProps.disabled) {\n        this.disconnect();\n      } else {\n        this.connect();\n      }\n    }\n  }\n\n  connect() {\n    const { address } = this.props;\n    if (!address) return;\n    this.wsavc = new window.WSAvcPlayer(this.canvasRef, \"webgl\", 1, 35);\n    this.wsavc.connect(\n      `${window.location.protocol === \"https:\" ? \"wss\" : \"ws\"}://${address}`,\n      () => {\n        this.wsavc.playStream();\n      }\n    );\n  }\n\n  disconnect() {\n    if (this.wsavc) {\n      this.wsavc.disconnect();\n      this.wsavc.initCanvas();\n      this.wsavc = undefined;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"player\">\n        <canvas className=\"canvas\" ref={this.setCanvasRef}></canvas>\n      </div>\n    );\n  }\n}\n","import * as tf from \"@tensorflow/tfjs\";\n\nexport const layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nexport const tailLayout = {\n  wrapperCol: { offset: 6, span: 16 }\n};\n\nexport const marks = {\n  0: \"0%\",\n  25: \"25%\",\n  50: \"50%\",\n  75: \"75%\",\n  100: \"100%\"\n};\n\nexport async function loadTruncatedMobileNet() {\n  const mobilenet = await tf.loadLayersModel(\n    \"https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_1.0_224/model.json\"\n  );\n  // Return a model that outputs an internal activation.\n  const layer = mobilenet.getLayer(\"conv_pw_13_relu\");\n  return tf.model({ inputs: mobilenet.inputs, outputs: layer.output });\n}\n\nexport class ControllerDataset {\n  /**\n   * Adds an example to the controller dataset.\n   * @param {Tensor} example A tensor representing the example. It can be an image,\n   *     an activation, or any other type of Tensor.\n   * @param {[number]} action speed and direction.\n   */\n  addExample(example, action) {\n    // One-hot encode the label.\n    const y = tf.tidy(() => tf.tensor2d(action, [1, 2]));\n\n    if (this.xs == null) {\n      // For the first example that gets added, keep example and y so that the\n      // ControllerDataset owns the memory of the inputs. This makes sure that\n      // if addExample() is called in a tf.tidy(), these Tensors will not get\n      // disposed.\n      this.xs = tf.keep(example);\n      this.ys = tf.keep(y);\n    } else {\n      const oldX = this.xs;\n      this.xs = tf.keep(oldX.concat(example, 0));\n\n      const oldY = this.ys;\n      this.ys = tf.keep(oldY.concat(y, 0));\n\n      oldX.dispose();\n      oldY.dispose();\n      y.dispose();\n    }\n  }\n  clean() {\n    this.xs.dispose();\n    this.ys.dispose();\n    this.xs = null;\n    this.ys = null;\n  }\n}\n\nexport async function sleep(time) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n}\n","import React from \"react\";\nimport { Menu } from \"antd\";\nimport { Link } from \"@reach/router\";\n\nexport default function Nav(props) {\n  return (\n    <Menu mode=\"horizontal\" {...props}>\n      <Menu.Item>\n        <Link to=\"controller\">控制</Link>\n      </Menu.Item>\n      <Menu.Item>\n        <Link to=\"setting\">设置</Link>\n      </Menu.Item>\n      <Menu.Item>\n        <Link to=\"ai\">Ai</Link>\n      </Menu.Item>\n    </Menu>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Switch, Slider } from \"antd\";\nimport { AimOutlined, DownOutlined, UpOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport store from \"store\";\n\nlet curentOrientation;\nconst deviceorientation = (e) => {\n  debugger;\n  const { alpha, beta, gamma } = e;\n  curentOrientation = { alpha, beta, gamma };\n};\n\nwindow.addEventListener(\"deviceorientation\", deviceorientation);\n\nexport default class Controller extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zeroOrientation: undefined,\n      directionReverse: store.get(\"directionReverse\") || true,\n      backwardPower: 50,\n      forwardPower: 50,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"deviceorientation\", this.deviceorientation);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"deviceorientation\",\n      this.handleSetZeroOrientation\n    );\n  }\n  deviceorientation = ({ alpha, beta, gamma }) => {\n    const {\n      props: { controller },\n      state: { directionReverse, isAiControlling, zeroOrientation },\n    } = this;\n    if (!zeroOrientation) return;\n    if (isAiControlling) return;\n    const { beta: baseBeta } = zeroOrientation;\n    let bateDegree = beta - baseBeta;\n    bateDegree = bateDegree < -45 ? -45 : bateDegree;\n    bateDegree = bateDegree > 45 ? 45 : bateDegree;\n    controller.direction((bateDegree / 45) * (directionReverse ? -1 : 1));\n  };\n\n  render() {\n    const { directionReverse, controller } = this.props;\n    const { forwardPower, backwardPower } = this.state;\n    return (\n      <div className=\"controller\">\n        <Form className=\"controller-form\" size=\"small\" layout=\"inline\">\n          <Form.Item>\n            <Button\n              type=\"danger\"\n              onClick={() => {\n                this.setState({ zeroOrientation: { ...curentOrientation } });\n              }}\n              icon={<AimOutlined />}\n            >\n              舵机校准\n            </Button>\n          </Form.Item>\n          <Form.Item label=\"舵机反向\">\n            <Switch\n              checked={directionReverse}\n              onChange={(v) => {\n                this.setState({\n                  directionReverse: v,\n                });\n                store.set(\"directionReverse\", v);\n              }}\n            />\n          </Form.Item>\n          <Button\n            className=\"left-button\"\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            onTouchStart={() => {\n              controller.direction(1);\n            }}\n            onTouchEnd={() => {\n              controller.direction(0);\n            }}\n            icon={<LeftOutlined />}\n          ></Button>\n\n          <Button\n            className=\"right-button\"\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            onTouchStart={() => {\n              controller.direction(-1);\n            }}\n            onTouchEnd={() => {\n              controller.direction(0);\n            }}\n            icon={<RightOutlined />}\n          ></Button>\n          <Button\n            className=\"forward-button\"\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            onTouchStart={() => {\n              controller.speed((1 * forwardPower) / 100);\n            }}\n            onTouchEnd={() => {\n              controller.speed(0);\n            }}\n            icon={<UpOutlined />}\n          ></Button>\n\n          <Button\n            className=\"backward-button\"\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            onTouchStart={() => {\n              controller.speed((-1 * backwardPower) / 100);\n            }}\n            onTouchEnd={() => {\n              controller.speed(0);\n            }}\n            icon={<DownOutlined />}\n          ></Button>\n\n          <Form.Item label=\"前进油门\">\n            <Slider\n              value={forwardPower}\n              min={0}\n              max={100}\n              onChange={(forwardPower) => {\n                this.setState({ forwardPower });\n              }}\n              style={{ width: \"15vw\" }}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"倒退油门\">\n            <Slider\n              value={backwardPower}\n              min={0}\n              max={100}\n              style={{ width: \"15vw\" }}\n              onChange={(backwardPower) => {\n                this.setState({ backwardPower });\n              }}\n            />\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Slider, Form, Button, Input } from \"antd\";\nimport { layout, tailLayout } from \"../unit\";\n\nexport default function Setting({\n  onDisconnect,\n  wsConnected,\n  onSubmit,\n  ...form\n}) {\n  const { speedZeroRate } = form;\n  return (\n    <Form {...layout} onFinish={onSubmit} initialValues={form}>\n      <br />\n      <Form.Item\n        label=\"控制连接地址\"\n        name=\"wsAddress\"\n        rules={[{ required: true, message: \"请输入连接地址!\" }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"媒体连接地址\" name=\"playerWsAddress\">\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"电调无输出 PWM 空占比\" name=\"speedZeroRate\">\n        <Slider min={0} max={100} included={false} tooltipVisible disabled />\n      </Form.Item>\n      <Form.Item label=\"电调最大 PWM 空占比\" name=\"speedMaxRate\">\n        <Slider min={speedZeroRate} max={100} tooltipVisible />\n      </Form.Item>\n      <Form.Item name=\"speedReverseMaxRate\" label=\"电调反向最大 PWM 空占比\">\n        <Slider tooltipVisible min={0} max={speedZeroRate} />\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        {wsConnected ? (\n          <Button type=\"danger\" onClick={onDisconnect}>\n            断开\n          </Button>\n        ) : (\n          <Button type=\"primary\" htmlType=\"submit\">\n            连接\n          </Button>\n        )}\n      </Form.Item>\n    </Form>\n  );\n}\n","import React, { Component } from \"react\";\nimport store from \"store\";\n\nimport { InputNumber, Form, Switch, Button } from \"antd\";\nimport Keyboard from \"./Keyboard\";\nimport \"./App.css\";\nimport Player from \"./Player\";\nimport Ai from \"./Ai\";\nimport { Router } from \"@reach/router\";\nimport Nav from \"./components/Nav\";\nimport Controller from \"./components/Controller\";\nimport Setting from \"./components/Setting\";\nimport { ExpandOutlined } from \"@ant-design/icons\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.appRef = React.createRef();\n    this.state = {\n      setting: {\n        speedMaxRate: store.get(\"speedMaxRate\") || 80,\n        speedReverseMaxRate: store.get(\"speedReverseMaxRate\") || 70,\n        speedZeroRate: store.get(\"speedZeroRate\") || 75,\n        wsAddress: store.get(\"wsAddress\"),\n        playerWsAddress: store.get(\"playerWsAddress\"),\n        ...store.get(\"setting\"),\n      },\n      wsConnected: false,\n      playerEnabled: false,\n      canvasRef: undefined,\n      isAiControlling: false,\n      action: {\n        speed: 0,\n        direction: 0,\n      },\n    };\n\n    this.controller = {\n      speed: (v) => {\n        const {\n          changeSpeed,\n          state: {\n            setting: { speedMaxRate, speedReverseMaxRate, speedZeroRate },\n            action,\n          },\n        } = this;\n        action.speed = v;\n        const rate =\n          v > 0\n            ? speedZeroRate + (speedMaxRate - speedZeroRate) * v\n            : speedZeroRate + (speedZeroRate - speedReverseMaxRate) * v;\n        this.setState({ action: { ...action } });\n        changeSpeed(rate);\n      },\n      direction: (v) => {\n        const {\n          changeDirection,\n          state: { action },\n        } = this;\n        action.direction = v;\n        changeDirection(v * 5 + 7.5);\n        this.setState({ action: { ...action } });\n      },\n    };\n  }\n\n  componentDidMount() {\n    const {\n      connectWs,\n      state: { wsAddress },\n    } = this;\n\n    connectWs({ wsAddress });\n  }\n\n  connectWs = ({ wsAddress, playerWsAddress }) => {\n    if (!wsAddress) return;\n    if (this.socket) {\n      this.socket.close();\n      this.socket = undefined;\n    }\n\n    this.socket = window.io(wsAddress);\n    this.socket.on(\"connect\", () => {\n      this.setState({ wsConnected: true });\n      this.changeZeroSpeedRate(this.state.speedZeroRate);\n      store.set(\"wsAddress\", wsAddress);\n    });\n    this.socket.on(\"disconnect\", () => {\n      this.setState({ wsConnected: false });\n    });\n\n    if (!playerWsAddress) return;\n    this.setState({\n      playerWsAddress,\n    });\n    store.set(\"playerWsAddress\", playerWsAddress);\n  };\n\n  disconnectWs = (e) => {\n    e && e.preventDefault();\n    this.socket.close();\n  };\n\n  changeSetting = (setting) => {\n    this.setState({ setting });\n    store.set(\"setting\", setting);\n    this.connectWs(setting);\n  };\n\n  changeZeroSpeedRate = (speedZeroRate) => {\n    if (!this.state.wsConnected) return;\n    this.socket.emit(\"speed zero rate\", speedZeroRate);\n    this.setState({ speedZeroRate });\n  };\n\n  changeSpeed = (speedRate) => {\n    if (!this.state.wsConnected) return;\n    this.socket.emit(\"speed rate\", speedRate);\n  };\n\n  changeDirection = (directionRate) => {\n    if (!this.state.wsConnected) return;\n    this.socket.emit(\"direction rate\", directionRate);\n  };\n\n  render() {\n    const {\n      disconnectWs,\n      controller,\n      changeSetting,\n      state: { setting, wsConnected, playerEnabled, canvasRef, action },\n    } = this;\n    return (\n      <div className=\"App\" ref={this.appRef}>\n        <Form layout=\"inline\" className=\"app-status\" size=\"small\">\n          <Form.Item label=\"连接状态\">\n            <Switch checked={wsConnected} disabled />\n          </Form.Item>\n\n          <Form.Item label=\"舵机\">\n            <InputNumber value={action.direction} />\n          </Form.Item>\n          <Form.Item label=\"电调\">\n            <InputNumber value={action.speed} />\n          </Form.Item>\n          <Form.Item label=\"摄像头\">\n            <Switch\n              checked={playerEnabled}\n              onChange={(playerEnabled) => {\n                this.setState({ playerEnabled });\n              }}\n            />\n          </Form.Item>\n          <Form.Item label=\"全屏\">\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<ExpandOutlined />}\n              onClick={() => {\n                const el = this.appRef.current;\n                el.requestFullscreen && el.requestFullscreen();\n              }}\n            ></Button>\n          </Form.Item>\n        </Form>\n\n        <Nav className=\"app-nav\" />\n\n        <Router className=\"app-page\">\n          <Controller path=\"controller\" controller={controller} />\n          <Setting\n            path=\"setting\"\n            {...setting}\n            wsConnected={wsConnected}\n            onDisconnect={disconnectWs}\n            onSubmit={changeSetting}\n          />\n          <Ai\n            path=\"ai\"\n            canvasRef={canvasRef}\n            action={action}\n            controller={controller}\n            onAi={(isAiControlling) => this.setState({ isAiControlling })}\n          />\n        </Router>\n\n        <Player\n          disabled={!playerEnabled}\n          address={setting.playerWsAddress}\n          setCanvasRef={(canvasRef) => {\n            this.setState({ canvasRef });\n          }}\n        />\n        <Keyboard controller={controller} />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}