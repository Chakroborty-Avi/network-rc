{"version":3,"sources":["Keyboard.js","Player.js","unit.js","Ai.js","App.js","serviceWorker.js","index.js"],"names":["Keybord","props","keyboardBind","controller","speed","direction","window","document","addEventListener","event","keyName","key","ref","createRef","this","tabIndex","Component","Player","setCanvasRef","canvasRef","nextProps","disabled","disconnect","connect","address","wsavc","WSAvcPlayer","location","protocol","playStream","initCanvas","undefined","className","layout","labelCol","span","wrapperCol","tailLayout","offset","marks","0","25","50","75","100","loadTruncatedMobileNet","a","tf","mobilenet","layer","getLayer","inputs","outputs","output","truncatedMobileNet","model","current","controllerDataset","example","action","y","xs","ys","oldX","concat","oldY","dispose","Ai","exampleHandler","exampleList","state","propAction","img","fromPixels","smallImg","resizeNearestNeighbor","processedImg","expandDims","toFloat","div","sub","_action","addExample","predict","toPixels","smallCanvasRef","push","toDataURL","setState","train","isTraining","Error","layers","flatten","inputShape","shape","slice","dense","units","activation","kernelInitializer","useBias","optimizer","adam","compile","loss","batchSize","Math","floor","fit","epochs","callbacks","onBatchEnd","batch","logs","console","log","toFixed","onAi","isPredicting","embeddings","predictions","as1D","data","doAction","record","isRecording","learnForm","loading","training","spinning","Item","label","initialValues","onFinish","name","required","htmlType","type","icon","AppstoreAddOutlined","onClick","size","grid","gutter","column","itemLayout","pagination","pageSize","dataSource","renderItem","title","actions","CloseOutlined","src","TabPane","Tabs","alpha","beta","gamma","App","deviceorientation","changeDirection","changeSpeed","hold","base","baseBeta","directionReverse","speedZeroRate","speedMaxRate","speedReverseMaxRate","isAiControlling","bateDegree","connectWs","wsAddress","playerWsAddress","socket","close","io","on","wsConnected","changeZeroSpeedRate","store","set","disconnectWs","e","preventDefault","handleHold","emit","speedRate","directionRate","appRef","React","get","playerEnabled","v","rate","checked","style","margin","value","onChange","ExpandOutlined","requestFullscreen","tab","AimOutlined","onTouchStart","onTouchEnd","UpOutlined","DownOutlined","min","max","included","tooltipVisible","rules","message","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.17eee08d.chunk.js","sourcesContent":["import React, { Component, createRef } from \"react\";\n\nexport default class Keybord extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = createRef();\n  }\n\n  componentDidMount() {\n    this.keyboardBind();\n  }\n\n  keyboardBind = () => {\n    const {\n      props: {\n        controller: { speed, direction }\n      }\n    } = this;\n    window.document.addEventListener(\n      \"keydown\",\n      event => {\n        const keyName = event.key;\n        if (keyName === \"w\") {\n          speed(1);\n        }\n        if (keyName === \"s\") {\n          speed(-1);\n        }\n        if (keyName === \"a\") {\n          direction(1);\n        }\n        if (keyName === \"d\") {\n          direction(-1);\n        }\n      },\n      false\n    );\n    window.document.addEventListener(\n      \"keyup\",\n      event => {\n        const {\n          props: {\n            controller: { speed, direction }\n          }\n        } = this;\n        const keyName = event.key;\n        if (keyName === \"w\") {\n          speed(0);\n        }\n        if (keyName === \"s\") {\n          speed(0);\n        }\n        if (keyName === \"a\") {\n          direction(0);\n        }\n        if (keyName === \"d\") {\n          direction(0);\n        }\n      },\n      false\n    );\n  };\n\n  render() {\n    return (\n      <div  tabIndex=\"0\" ref={this.ref}>\n        wads\n      </div>\n    );\n  }\n}\n","import React, { Component, createRef } from \"react\";\n\nexport default class Player extends Component {\n  constructor(props) {\n    super(props);\n    this.setCanvasRef = ref => {\n      this.canvasRef = ref;\n      props.setCanvasRef && props.setCanvasRef(ref);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.disabled !== this.props.disabled) {\n      if (nextProps.disabled) {\n        this.disconnect();\n      } else {\n        this.connect();\n      }\n    }\n  }\n\n  connect() {\n    const { address } = this.props;\n    if (!address) return;\n    this.wsavc = new window.WSAvcPlayer(this.canvasRef, \"webgl\", 1, 35);\n    this.wsavc.connect(\n      `${window.location.protocol === \"https:\" ? \"wss\" : \"ws\"}://${address}`,\n      () => {\n        this.wsavc.playStream();\n      }\n    );\n  }\n\n  disconnect() {\n    if (this.wsavc) {\n      this.wsavc.disconnect();\n      this.wsavc.initCanvas();\n      this.wsavc = undefined;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"player\">\n        <canvas className=\"canvas\" ref={this.setCanvasRef}></canvas>\n      </div>\n    );\n  }\n}\n","import * as tf from \"@tensorflow/tfjs\";\n\nexport const layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nexport const tailLayout = {\n  wrapperCol: { offset: 6, span: 16 }\n};\n\nexport const marks = {\n  0: \"0%\",\n  25: \"25%\",\n  50: \"50%\",\n  75: \"75%\",\n  100: \"100%\"\n};\n\nexport async function loadTruncatedMobileNet() {\n  const mobilenet = await tf.loadLayersModel(\n    \"https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_1.0_224/model.json\"\n  );\n  // Return a model that outputs an internal activation.\n  const layer = mobilenet.getLayer(\"conv_pw_13_relu\");\n  return tf.model({ inputs: mobilenet.inputs, outputs: layer.output });\n}\n\nexport class ControllerDataset {\n  /**\n   * Adds an example to the controller dataset.\n   * @param {Tensor} example A tensor representing the example. It can be an image,\n   *     an activation, or any other type of Tensor.\n   * @param {[number]} action speed and direction.\n   */\n  addExample(example, action) {\n    // One-hot encode the label.\n    const y = tf.tidy(() => tf.tensor2d(action,[1,2]));\n\n    if (this.xs == null) {\n      // For the first example that gets added, keep example and y so that the\n      // ControllerDataset owns the memory of the inputs. This makes sure that\n      // if addExample() is called in a tf.tidy(), these Tensors will not get\n      // disposed.\n      this.xs = tf.keep(example);\n      this.ys = tf.keep(y);\n    } else {\n      const oldX = this.xs;\n      this.xs = tf.keep(oldX.concat(example, 0));\n\n      const oldY = this.ys;\n      this.ys = tf.keep(oldY.concat(y, 0));\n\n      oldX.dispose();\n      oldY.dispose();\n      y.dispose();\n    }\n  }\n}\n","import React, { Component, createRef } from \"react\";\nimport { Form, Button, Spin, InputNumber, List, Card, Space } from \"antd\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as tfd from \"@tensorflow/tfjs-data\";\nimport { AppstoreAddOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport {\n  layout,\n  tailLayout,\n  loadTruncatedMobileNet,\n  ControllerDataset\n} from \"./unit\";\n\nlet truncatedMobileNet, model;\nconst controllerDataset = new ControllerDataset();\n\nexport default class Ai extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      learnForm: {},\n      exampleList: [],\n      loading: false,\n      training: false,\n      isPredicting: false,\n      isRecording: false,\n      loss: 0\n    };\n    this.smallCanvasRef = createRef();\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    truncatedMobileNet = await loadTruncatedMobileNet();\n    this.setState({ loading: false });\n  }\n\n  exampleHandler = async action => {\n    const {\n      state: { exampleList },\n      props: { action: propAction, canvasRef }\n    } = this;\n\n    const img = tf.browser.fromPixels(canvasRef);\n    const smallImg = img.resizeNearestNeighbor([224, 224]);\n    const processedImg = tf.tidy(() =>\n      smallImg\n        .expandDims(0)\n        .toFloat()\n        .div(127)\n        .sub(1)\n    );\n    const _action = action || propAction;\n    const { speed, direction } = _action;\n    controllerDataset.addExample(truncatedMobileNet.predict(processedImg), [\n      speed,\n      direction\n    ]);\n    await tf.browser.toPixels(smallImg, this.smallCanvasRef.current);\n    exampleList.push({\n      img: this.smallCanvasRef.current.toDataURL(),\n      action: { speed, direction }\n    });\n    this.setState({ exampleList });\n    img.dispose();\n  };\n\n  train = async () => {\n    this.setState({\n      isTraining: true\n    });\n    if (controllerDataset.xs == null) {\n      throw new Error(\"Add some examples before training!\");\n    }\n\n    // Creates a 2-layer fully connected model. By creating a separate model,\n    // rather than adding layers to the mobilenet model, we \"freeze\" the weights\n    // of the mobilenet model, and only train weights from the new model.\n    model = tf.sequential({\n      layers: [\n        // Flattens the input to a vector so we can use it in a dense layer. While\n        // technically a layer, this only performs a reshape (and has no training\n        // parameters).\n        tf.layers.flatten({\n          inputShape: truncatedMobileNet.outputs[0].shape.slice(1)\n        }),\n        // Layer 1.\n        tf.layers.dense({\n          units: 100,\n          activation: \"relu\",\n          kernelInitializer: \"varianceScaling\",\n          useBias: true\n        }),\n        // Layer 2. The number of units of the last layer should correspond\n        // to the number of classes we want to predict.\n        tf.layers.dense({\n          units: 2,\n          kernelInitializer: \"varianceScaling\",\n          useBias: false,\n          activation: \"softmax\"\n        })\n      ]\n    });\n\n    // Creates the optimizers which drives training of the model.\n    const optimizer = tf.train.adam(0.0001);\n    // We use categoricalCrossentropy which is the loss function we use for\n    // categorical classification which measures the error between our predicted\n    // probability distribution over classes (probability that an input is of each\n    // class), versus the label (100% probability in the true class)>\n    model.compile({ optimizer: optimizer, loss: \"categoricalCrossentropy\" });\n\n    // We parameterize batch size as a fraction of the entire dataset because the\n    // number of examples that are collected depends on how many examples the user\n    // collects. This allows us to have a flexible batch size.\n    const batchSize = Math.floor(controllerDataset.xs.shape[0] * 0.4);\n    if (!(batchSize > 0)) {\n      throw new Error(\n        `Batch size is 0 or NaN. Please choose a non-zero fraction.`\n      );\n    }\n\n    // Train the model! Model.fit() will shuffle xs & ys so we don't have to.\n    model.fit(controllerDataset.xs, controllerDataset.ys, {\n      batchSize,\n      epochs: 20,\n      callbacks: {\n        onBatchEnd: async (batch, logs) => {\n          console.log(\"Loss: \" + logs.loss.toFixed(5));\n          this.setState({ loss: logs.loss.toFixed(5) });\n        }\n      }\n    });\n  };\n\n  predict = async () => {\n    const {\n      props: { canvasRef, onAi }\n    } = this;\n    onAi(true);\n    this.setState(\n      {\n        isPredicting: true\n      },\n      async () => {\n        while (this.state.isPredicting) {\n          const img = tf.tidy(() =>\n            tf.browser\n              .fromPixels(canvasRef)\n              .resizeNearestNeighbor([224, 224])\n              .expandDims(0)\n              .toFloat()\n              .div(127)\n              .sub(1)\n          );\n\n          // Make a prediction through mobilenet, getting the internal activation of\n          // the mobilenet model, i.e., \"embeddings\" of the input images.\n          const embeddings = truncatedMobileNet.predict(img);\n\n          // Make a prediction through our newly-trained model using the embeddings\n          // from mobilenet as input.\n          const predictions = model.predict(embeddings);\n\n          // Returns the index with the maximum probability. This number corresponds\n          // to the class the model thinks is the most probable given the input.\n\n          const [speed, direction] = await predictions.as1D().data();\n          console.log(\"Ai 动作：\", { speed, direction });\n          img.dispose();\n\n          this.doAction({ speed, direction });\n          await tf.nextFrame();\n        }\n        onAi(false);\n      }\n    );\n  };\n\n  record = async () => {\n    this.setState(\n      {\n        isRecording: true\n      },\n      async () => {\n        while (this.state.isRecording) {\n          await this.exampleHandler();\n        }\n      }\n    );\n  };\n\n  async doAction({ speed, direction }) {\n    const {\n      props: { controller }\n    } = this;\n    controller.direction(direction);\n    // controller.speed(speed);\n  }\n\n  render() {\n    const {\n      state: {\n        exampleList,\n        loading,\n        isRecording,\n        isTraining,\n        isPredicting,\n        loss\n      },\n      exampleHandler,\n      record,\n      predict\n    } = this;\n\n    return (\n      <Spin spinning={loading}>\n        <canvas className=\"ai-canvas\" ref={this.smallCanvasRef}></canvas>\n        <Form {...layout}>\n          <Form.Item label=\"Learning rate\"></Form.Item>\n          <Form.Item label=\"\"></Form.Item>\n        </Form>\n        <Form\n          {...layout}\n          initialValues={{ speed: 0, direction: 0 }}\n          onFinish={action => exampleHandler(action)}\n        >\n          <Form.Item name=\"speed\" label=\"速度\" required>\n            <InputNumber />\n          </Form.Item>\n          <Form.Item name=\"direction\" label=\"方向\" required>\n            <InputNumber />\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Space>\n              <Button\n                key=\"record-once\"\n                htmlType=\"submit\"\n                type=\"primary\"\n                icon={<AppstoreAddOutlined />}\n              />\n              <Button\n                type=\"primary\"\n                key=\"record\"\n                loading={isRecording}\n                onClick={record}\n              >\n                开始记录\n              </Button>\n              <Button\n                key=\"stop\"\n                onClick={() => {\n                  this.setState({ isRecording: false });\n                }}\n                disabled={!isRecording}\n              >\n                停止记录\n              </Button>\n              <Button onClick={this.train} key=\"fit\" loading={isTraining}>\n                学习\n              </Button>\n              <span>loss: {loss}</span>\n            </Space>\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Space>\n              <Button\n                type=\"danger\"\n                key=\"predic\"\n                loading={isPredicting}\n                onClick={predict}\n              >\n                开始 Ai 驾驶\n              </Button>\n              <Button\n                onClick={() => {\n                  this.setState({ isPredicting: false });\n                }}\n                disabled={!isPredicting}\n                key=\"stop\"\n              >\n                停止 Ai 驾驶\n              </Button>\n            </Space>\n          </Form.Item>\n        </Form>\n        <List\n          size=\"small\"\n          className=\"ai-example-list\"\n          grid={{ gutter: 16, column: 4 }}\n          itemLayout=\"vertical\"\n          pagination={{\n            pageSize: 12\n          }}\n          dataSource={exampleList}\n          renderItem={({ img, action: { speed, direction } }) => (\n            <List.Item>\n              <Card\n                size=\"small\"\n                title={`速度：${speed}    方向：${direction}`}\n                actions={[\n                  <Button size=\"small\" icon={<CloseOutlined />} type=\"danger\" />\n                ]}\n              >\n                <img src={img} />\n              </Card>\n            </List.Item>\n          )}\n        />\n      </Spin>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport store from \"store\";\nimport {\n  ExpandOutlined,\n  AimOutlined,\n  DownOutlined,\n  UpOutlined\n} from \"@ant-design/icons\";\nimport { InputNumber, Form, Switch, Input, Button, Slider, Tabs } from \"antd\";\nimport Keyboard from \"./Keyboard\";\nimport \"./App.css\";\nimport Player from \"./Player\";\nimport Ai from \"./Ai\";\nimport { layout, tailLayout, marks } from \"./unit\";\n\nconst { TabPane } = Tabs;\nlet current;\nwindow.addEventListener(\"deviceorientation\", event => {\n  const { alpha, beta, gamma } = event;\n  current = { alpha, beta, gamma };\n});\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.appRef = React.createRef();\n    this.state = {\n      hold: false,\n      speed: 0,\n      direction: 0,\n      base: {\n        alpha: undefined,\n        beta: undefined,\n        gamma: undefined\n      },\n      speedMaxRate: store.get(\"speedMaxRate\") || 80,\n      speedReverseMaxRate: store.get(\"speedReverseMaxRate\") || 70,\n      speedZeroRate: store.get(\"speedZeroRate\") || 75,\n      speedRate: 0,\n      directionReverse: store.get(\"directionReverse\") || true,\n      wsConnected: false,\n      wsAddress: store.get(\"wsAddress\"),\n      playerWsAddress: store.get(\"playerWsAddress\"),\n      playerEnabled: false,\n      canvasRef: undefined,\n      isAiControlling: false,\n      action: {\n        speed: 0,\n        direction: 0\n      }\n    };\n\n    this.controller = {\n      speed: v => {\n        const {\n          changeSpeed,\n          state: { speedMaxRate, speedReverseMaxRate, speedZeroRate, action }\n        } = this;\n        action.speed = v;\n        const rate =\n          v > 0\n            ? speedZeroRate + (speedMaxRate - speedZeroRate) * v\n            : speedZeroRate + (speedZeroRate - speedReverseMaxRate) * v;\n        this.setState({ action });\n        changeSpeed(rate);\n      },\n      direction: v => {\n        const {\n          changeDirection,\n          state: { action }\n        } = this;\n        action.direction = v;\n        changeDirection(v * 5 + 7.5);\n        this.setState({ action });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      deviceorientation,\n      connectWs,\n      state: { wsAddress }\n    } = this;\n    window.addEventListener(\n      \"deviceorientation\",\n      () => {\n        deviceorientation();\n      },\n      false\n    );\n\n    connectWs({ wsAddress });\n  }\n\n  deviceorientation = () => {\n    const {\n      changeSpeed,\n      changeDirection,\n      state: {\n        hold,\n        base: { gamma: baseGamma, beta: baseBeta },\n        directionReverse,\n        speedZeroRate,\n        speedMaxRate,\n        speedReverseMaxRate,\n        isAiControlling\n      }\n    } = this;\n\n    if (isAiControlling) return;\n    let bateDegree = current.beta - baseBeta;\n    bateDegree = bateDegree < -30 ? -30 : bateDegree;\n    bateDegree = bateDegree > 30 ? 30 : bateDegree;\n    const directionRate =\n      (directionReverse ? -bateDegree / 30 : bateDegree / 30) * 5 + 7.5;\n    changeDirection(directionRate);\n\n    // if (!hold) return;\n    // let gamaDegree = current.gamma - baseGamma;\n    // gamaDegree = gamaDegree < -30 ? -30 : gamaDegree;\n    // gamaDegree = gamaDegree > 30 ? 30 : gamaDegree;\n    // const speedRate =\n    //   gamaDegree > 0\n    //     ? (gamaDegree / 30) * (speedMaxRate - speedZeroRate) + speedZeroRate\n    //     : speedZeroRate +\n    //       (gamaDegree / 30) * (speedZeroRate - speedReverseMaxRate);\n    // changeSpeed(speedRate);\n  };\n\n  connectWs = ({ wsAddress, playerWsAddress }) => {\n    if (!wsAddress) return;\n    if (this.socket) {\n      this.socket.close();\n      this.socket = undefined;\n    }\n\n    this.socket = window.io(wsAddress);\n    this.socket.on(\"connect\", () => {\n      this.setState({ wsConnected: true });\n      this.changeZeroSpeedRate(this.state.speedZeroRate);\n      store.set(\"wsAddress\", wsAddress);\n    });\n    this.socket.on(\"disconnect\", () => {\n      this.setState({ wsConnected: false });\n    });\n\n    if (!playerWsAddress) return;\n    this.setState({\n      playerWsAddress\n    });\n    store.set(\"playerWsAddress\", playerWsAddress);\n  };\n\n  disconnectWs = e => {\n    e && e.preventDefault();\n    this.socket.close();\n  };\n\n  handleHold = (hold = false) => {\n    if (!hold) {\n      this.socket.emit(\"speed rate\", 0);\n      this.socket.emit(\"direction rate\", 0);\n    }\n    this.setState({\n      hold,\n      base: { ...current }\n    });\n  };\n\n  changeZeroSpeedRate = speedZeroRate => {\n    if (!this.state.wsConnected) return;\n    this.socket.emit(\"speed zero rate\", speedZeroRate);\n    this.setState({ speedZeroRate });\n  };\n\n  changeSpeed = speedRate => {\n    if (!this.state.wsConnected) return;\n    this.socket.emit(\"speed rate\", speedRate);\n    this.setState({ speedRate });\n  };\n\n  changeDirection = directionRate => {\n    if (!this.state.wsConnected) return;\n    this.socket.emit(\"direction rate\", directionRate);\n    this.setState({ direction: directionRate });\n  };\n\n  render() {\n    const {\n      connectWs,\n      disconnectWs,\n      changeSpeed,\n      changeDirection,\n      controller,\n      state: {\n        wsConnected,\n        directionReverse,\n        direction,\n        speedReverseMaxRate,\n        speedMaxRate,\n        speedZeroRate,\n        speedRate,\n        wsAddress,\n        playerWsAddress,\n        playerEnabled,\n        canvasRef,\n        action\n      }\n    } = this;\n    return (\n      <div className=\"App\" ref={this.appRef}>\n        <Form layout=\"inline\" className=\"status\" size=\"small\">\n          <Form.Item label=\"连接状态\">\n            <Switch checked={wsConnected} disabled />\n          </Form.Item>\n\n          <Form.Item label=\"舵机 PWM\">\n            <InputNumber\n              style={{ margin: \"0 16px\" }}\n              value={direction}\n              onChange={changeDirection}\n            />\n          </Form.Item>\n          <Form.Item label=\"电调 PWM\">\n            <InputNumber\n              style={{ margin: \"0 16px\" }}\n              value={speedRate}\n              onChange={changeSpeed}\n            />\n          </Form.Item>\n          <Form.Item label=\"全屏\">\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<ExpandOutlined />}\n              onClick={() => {\n                this.appRef.current.requestFullscreen();\n              }}\n            ></Button>\n          </Form.Item>\n        </Form>\n        <Tabs>\n          <TabPane tab=\"控制\" key={1} className=\"control-pane\">\n            <Form className=\"controller\" size=\"small\" layout=\"inline\">\n              <Form.Item>\n                <Button\n                  type=\"danger\"\n                  onClick={() => {\n                    this.setState({ base: { ...current } });\n                  }}\n                  icon={<AimOutlined />}\n                >\n                  舵机校准\n                </Button>\n              </Form.Item>\n              <Form.Item label=\"舵机反向\">\n                <Switch\n                  checked={directionReverse}\n                  onChange={v => {\n                    this.setState({\n                      directionReverse: v\n                    });\n                  }}\n                />\n              </Form.Item>\n            </Form>\n            <Button\n              className=\"forward-button\"\n              shape=\"circle\"\n              size=\"large\"\n              type=\"primary\"\n              onTouchStart={() => {\n                this.setState({ hold: true });\n                this.changeSpeed(speedMaxRate);\n              }}\n              onTouchEnd={() => {\n                this.setState({ hold: false });\n                this.changeSpeed(speedZeroRate);\n              }}\n              icon={<UpOutlined />}\n            ></Button>\n\n            <Button\n              className=\"backward-button\"\n              shape=\"circle\"\n              size=\"large\"\n              type=\"primary\"\n              onTouchStart={() => {\n                this.setState({ hold: true });\n                this.changeSpeed(speedReverseMaxRate);\n              }}\n              onTouchEnd={() => {\n                this.setState({ hold: false });\n                this.changeSpeed(speedZeroRate);\n              }}\n              icon={<DownOutlined />}\n            ></Button>\n          </TabPane>\n          <TabPane tab=\"键盘控制\" key={2}>\n            <Keyboard controller={controller} />\n          </TabPane>\n          <TabPane tab=\"设置\" key=\"setting\">\n            <Form {...layout}>\n              <Form.Item label=\"摄像头\">\n                <Switch\n                  checked={playerEnabled}\n                  onChange={playerEnabled => {\n                    this.setState({ playerEnabled });\n                  }}\n                />\n              </Form.Item>\n              <Form.Item label=\"电调无输出 PWM 空占比\">\n                <Slider\n                  value={speedZeroRate}\n                  min={0}\n                  max={100}\n                  onChange={v => {\n                    this.changeZeroSpeedRate(v);\n                    store.set(\"speedZeroRate\", v);\n                  }}\n                  included={false}\n                  tooltipVisible\n                  marks={marks}\n                  disabled\n                />\n              </Form.Item>\n              <Form.Item label=\"电调最大 PWM 空占比\">\n                <Slider\n                  value={speedMaxRate}\n                  min={speedZeroRate}\n                  max={100}\n                  onChange={v => {\n                    this.setState({\n                      speedMaxRate: v\n                    });\n                    store.set(\"speedMaxRate\", v);\n                  }}\n                  marks={marks}\n                />\n              </Form.Item>\n              <Form.Item label=\"电调反向最大 PWM 空占比\">\n                <Slider\n                  value={speedReverseMaxRate}\n                  min={0}\n                  max={speedZeroRate}\n                  onChange={v => {\n                    this.setState({\n                      speedReverseMaxRate: v\n                    });\n                    store.set(\"speedReverseMaxRate\", v);\n                  }}\n                  marks={marks}\n                />\n              </Form.Item>\n            </Form>\n          </TabPane>\n          <TabPane tab=\"连接\" key={3}>\n            <Form\n              {...layout}\n              onFinish={connectWs}\n              initialValues={{ wsAddress, playerWsAddress }}\n            >\n              <br />\n              <Form.Item\n                label=\"控制连接地址\"\n                name=\"wsAddress\"\n                rules={[{ required: true, message: \"请输入连接地址!\" }]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item label=\"媒体连接地址\" name=\"playerWsAddress\">\n                <Input />\n              </Form.Item>\n              <Form.Item {...tailLayout}>\n                {wsConnected ? (\n                  <Button type=\"danger\" onClick={disconnectWs}>\n                    断开\n                  </Button>\n                ) : (\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    连接\n                  </Button>\n                )}\n              </Form.Item>\n            </Form>\n          </TabPane>\n          <TabPane tab=\"调试\" key={4}>\n            <Form.Item label=\"电调\">\n              <Slider\n                value={speedRate}\n                min={0}\n                max={100}\n                onChange={changeSpeed}\n              />\n            </Form.Item>\n            <Form.Item label=\"舵机\">\n              <Slider\n                value={direction}\n                min={0}\n                max={100}\n                onChange={changeDirection}\n              />\n            </Form.Item>\n          </TabPane>\n          <TabPane tab=\"Ai\" key=\"ai\">\n            <Ai\n              canvasRef={canvasRef}\n              action={action}\n              controller={controller}\n              onAi={isAiControlling => this.setState({ isAiControlling })}\n            />\n          </TabPane>\n        </Tabs>\n        <Player\n          disabled={!playerEnabled}\n          address={playerWsAddress}\n          setCanvasRef={canvasRef => {\n            this.setState({ canvasRef });\n          }}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}