{"version":3,"sources":["App.js","Keyboard.js","Player.js","serviceWorker.js","index.js"],"names":["current","Keybord","props","keyboardBind","controller","speed","direction","window","document","addEventListener","event","keyName","key","ref","createRef","this","tabIndex","Component","Player","canvasRef","nextProps","disabled","disconnect","connect","address","wsavc","WSAvcPlayer","location","protocol","playStream","initCanvas","undefined","className","TabPane","Tabs","alpha","beta","gamma","layout","labelCol","span","wrapperCol","tailLayout","offset","marks","0","25","50","75","100","App","deviceorientation","changeDirection","changeSpeed","state","hold","base","baseBeta","directionReverse","bateDegree","speedZeroRate","speedMaxRate","speedReverseMaxRate","connectWs","wsAddress","playerWsAddress","socket","close","io","on","setState","wsConnected","changeZeroSpeedRate","store","set","disconnectWs","e","preventDefault","handleHold","emit","speedRate","directionRate","appRef","React","get","playerEnabled","v","size","Item","label","checked","style","margin","value","onChange","type","shape","icon","ExpandOutlined","onClick","requestFullscreen","tab","AimOutlined","onTouchStart","onTouchEnd","UpOutlined","DownOutlined","min","max","included","tooltipVisible","onFinish","initialValues","name","rules","required","message","htmlType","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.d64cd7f0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport store from \"store\";\nimport {\n  ExpandOutlined,\n  AimOutlined,\n  DownOutlined,\n  UpOutlined\n} from \"@ant-design/icons\";\nimport { InputNumber, Form, Switch, Input, Button, Slider, Tabs } from \"antd\";\nimport Keyboard from \"./Keyboard\";\nimport \"./App.css\";\nimport Player from \"./Player\";\n\nconst { TabPane } = Tabs;\nlet current;\nwindow.addEventListener(\"deviceorientation\", event => {\n  const { alpha, beta, gamma } = event;\n  current = { alpha, beta, gamma };\n});\n\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nconst tailLayout = {\n  wrapperCol: { offset: 4, span: 16 }\n};\n\nconst marks = {\n  0: \"0%\",\n  25: \"25%\",\n  50: \"50%\",\n  75: \"75%\",\n  100: \"100%\"\n};\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.appRef = React.createRef();\n    this.state = {\n      hold: false,\n      speed: 0,\n      direction: 0,\n      base: {\n        alpha: undefined,\n        beta: undefined,\n        gamma: undefined\n      },\n      speedMaxRate: store.get(\"speedMaxRate\") || 80,\n      speedReverseMaxRate: store.get(\"speedReverseMaxRate\") || 70,\n      speedZeroRate: store.get(\"speedZeroRate\") || 75,\n      speedRate: 0,\n      directionReverse: store.get(\"directionReverse\") || true,\n      wsConnected: false,\n      wsAddress: store.get(\"wsAddress\"),\n      playerWsAddress: store.get(\"playerWsAddress\"),\n      playerEnabled: false\n    };\n\n    this.controller = {\n      speed: v => {\n        const {\n          changeSpeed,\n          state: { speedMaxRate, speedReverseMaxRate, speedZeroRate }\n        } = this;\n        const rate =\n          v > 0\n            ? speedZeroRate + (speedMaxRate - speedZeroRate) * v\n            : speedZeroRate + (speedZeroRate - speedReverseMaxRate) * v;\n        changeSpeed(rate);\n      },\n      direction: v => {\n        const { changeDirection } = this;\n        changeDirection(v * 5 + 7.5);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      deviceorientation,\n      connectWs,\n      state: { wsAddress }\n    } = this;\n    window.addEventListener(\n      \"deviceorientation\",\n      () => {\n        deviceorientation();\n      },\n      false\n    );\n\n    connectWs({ wsAddress });\n  }\n\n  deviceorientation = () => {\n    const {\n      changeSpeed,\n      changeDirection,\n      state: {\n        hold,\n        base: { gamma: baseGamma, beta: baseBeta },\n        directionReverse,\n        speedZeroRate,\n        speedMaxRate,\n        speedReverseMaxRate\n      }\n    } = this;\n    let bateDegree = current.beta - baseBeta;\n    bateDegree = bateDegree < -30 ? -30 : bateDegree;\n    bateDegree = bateDegree > 30 ? 30 : bateDegree;\n    const directionRate =\n      (directionReverse ? -bateDegree / 30 : bateDegree / 30) * 5 + 7.5;\n    changeDirection(directionRate);\n\n    // if (!hold) return;\n    // let gamaDegree = current.gamma - baseGamma;\n    // gamaDegree = gamaDegree < -30 ? -30 : gamaDegree;\n    // gamaDegree = gamaDegree > 30 ? 30 : gamaDegree;\n    // const speedRate =\n    //   gamaDegree > 0\n    //     ? (gamaDegree / 30) * (speedMaxRate - speedZeroRate) + speedZeroRate\n    //     : speedZeroRate +\n    //       (gamaDegree / 30) * (speedZeroRate - speedReverseMaxRate);\n    // changeSpeed(speedRate);\n  };\n\n  connectWs = ({ wsAddress, playerWsAddress }) => {\n    if (!wsAddress) return;\n    if (this.socket) {\n      this.socket.close();\n      this.socket = undefined;\n    }\n\n    this.socket = window.io(wsAddress);\n    this.socket.on(\"connect\", () => {\n      this.setState({ wsConnected: true });\n      this.changeZeroSpeedRate(this.state.speedZeroRate);\n      store.set(\"wsAddress\", wsAddress);\n    });\n    this.socket.on(\"disconnect\", () => {\n      this.setState({ wsConnected: false });\n    });\n\n    if (!playerWsAddress) return;\n    this.setState({\n      playerWsAddress\n    });\n    store.set(\"playerWsAddress\", playerWsAddress);\n  };\n\n  disconnectWs = e => {\n    e && e.preventDefault();\n    this.socket.close();\n  };\n\n  handleHold = (hold = false) => {\n    if (!hold) {\n      this.socket.emit(\"speed rate\", 0);\n      this.socket.emit(\"direction rate\", 0);\n    }\n    this.setState({\n      hold,\n      base: { ...current }\n    });\n  };\n\n  changeZeroSpeedRate = speedZeroRate => {\n    if (!this.state.wsConnected) return;\n    this.socket.emit(\"speed zero rate\", speedZeroRate);\n    this.setState({ speedZeroRate });\n  };\n\n  changeSpeed = speedRate => {\n    if (!this.state.wsConnected) return;\n    this.socket.emit(\"speed rate\", speedRate);\n    this.setState({ speedRate });\n  };\n\n  changeDirection = directionRate => {\n    if (!this.state.wsConnected) return;\n    this.socket.emit(\"direction rate\", directionRate);\n    this.setState({ direction: directionRate });\n  };\n\n  render() {\n    const {\n      connectWs,\n      disconnectWs,\n      changeSpeed,\n      changeDirection,\n      controller,\n      state: {\n        wsConnected,\n        directionReverse,\n        direction,\n        speedReverseMaxRate,\n        speedMaxRate,\n        speedZeroRate,\n        speedRate,\n        wsAddress,\n        playerWsAddress,\n        playerEnabled\n      }\n    } = this;\n    return (\n      <div className=\"App\" ref={this.appRef}>\n        <Form layout=\"inline\" className=\"status\" size=\"small\">\n          <Form.Item label=\"连接状态\">\n            <Switch checked={wsConnected} disabled />\n          </Form.Item>\n\n          <Form.Item label=\"舵机 PWM\">\n            <InputNumber\n              style={{ margin: \"0 16px\" }}\n              value={direction}\n              onChange={changeDirection}\n            />\n          </Form.Item>\n          <Form.Item label=\"电调 PWM\">\n            <InputNumber\n              style={{ margin: \"0 16px\" }}\n              value={speedRate}\n              onChange={changeSpeed}\n            />\n          </Form.Item>\n          <Form.Item label=\"全屏\">\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<ExpandOutlined />}\n              onClick={() => {\n                this.appRef.current.requestFullscreen();\n              }}\n            ></Button>\n          </Form.Item>\n        </Form>\n        <Tabs>\n          <TabPane tab=\"控制\" key={1} className=\"control-pane\">\n            <Form className=\"controller\" size=\"small\" layout=\"inline\">\n              <Form.Item>\n                <Button\n                  type=\"danger\"\n                  onClick={() => {\n                    this.setState({ base: { ...current } });\n                  }}\n                  icon={<AimOutlined />}\n                >\n                  舵机校准\n                </Button>\n              </Form.Item>\n              <Form.Item label=\"舵机反向\">\n                <Switch\n                  checked={directionReverse}\n                  onChange={v => {\n                    this.setState({\n                      directionReverse: v\n                    });\n                  }}\n                />\n              </Form.Item>\n            </Form>\n            <Button\n              className=\"forward-button\"\n              shape=\"circle\"\n              size=\"large\"\n              type=\"primary\"\n              onTouchStart={() => {\n                this.setState({ hold: true });\n                this.changeSpeed(speedMaxRate);\n              }}\n              onTouchEnd={() => {\n                this.setState({ hold: false });\n                this.changeSpeed(speedZeroRate);\n              }}\n              icon={<UpOutlined />}\n            ></Button>\n\n            <Button\n              className=\"backward-button\"\n              shape=\"circle\"\n              size=\"large\"\n              type=\"primary\"\n              onTouchStart={() => {\n                this.setState({ hold: true });\n                this.changeSpeed(speedReverseMaxRate);\n              }}\n              onTouchEnd={() => {\n                this.setState({ hold: false });\n                this.changeSpeed(speedZeroRate);\n              }}\n              icon={<DownOutlined />}\n            ></Button>\n          </TabPane>\n          <TabPane tab=\"键盘控制\" key={2}>\n            <Keyboard controller={controller} />\n          </TabPane>\n          <TabPane tab=\"设置\" key=\"setting\">\n            <Form {...layout}>\n              <Form.Item label=\"摄像头\">\n                <Switch\n                  checked={playerEnabled}\n                  onChange={playerEnabled => {\n                    this.setState({ playerEnabled });\n                  }}\n                />\n              </Form.Item>\n              <Form.Item label=\"电调无输出 PWM 空占比\">\n                <Slider\n                  value={speedZeroRate}\n                  min={0}\n                  max={100}\n                  onChange={v => {\n                    this.changeZeroSpeedRate(v);\n                    store.set(\"speedZeroRate\", v);\n                  }}\n                  included={false}\n                  tooltipVisible\n                  marks={marks}\n                  disabled\n                />\n              </Form.Item>\n              <Form.Item label=\"电调最大 PWM 空占比\">\n                <Slider\n                  value={speedMaxRate}\n                  min={speedZeroRate}\n                  max={100}\n                  onChange={v => {\n                    this.setState({\n                      speedMaxRate: v\n                    });\n                    store.set(\"speedMaxRate\", v);\n                  }}\n                  marks={marks}\n                />\n              </Form.Item>\n              <Form.Item label=\"电调反向最大 PWM 空占比\">\n                <Slider\n                  value={speedReverseMaxRate}\n                  min={0}\n                  max={speedZeroRate}\n                  onChange={v => {\n                    this.setState({\n                      speedReverseMaxRate: v\n                    });\n                    store.set(\"speedReverseMaxRate\", v);\n                  }}\n                  marks={marks}\n                />\n              </Form.Item>\n            </Form>\n          </TabPane>\n          <TabPane tab=\"连接\" key={3}>\n            <Form\n              {...layout}\n              onFinish={connectWs}\n              initialValues={{ wsAddress, playerWsAddress }}\n            >\n              <br />\n              <Form.Item\n                label=\"控制连接地址\"\n                name=\"wsAddress\"\n                rules={[{ required: true, message: \"请输入连接地址!\" }]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item label=\"媒体连接地址\" name=\"playerWsAddress\">\n                <Input />\n              </Form.Item>\n              <Form.Item {...tailLayout}>\n                {wsConnected ? (\n                  <Button type=\"danger\" onClick={disconnectWs}>\n                    断开\n                  </Button>\n                ) : (\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    连接\n                  </Button>\n                )}\n              </Form.Item>\n            </Form>\n          </TabPane>\n          <TabPane tab=\"调试\" key={4}>\n            <Form.Item label=\"电调\">\n              <Slider\n                value={speedRate}\n                min={0}\n                max={100}\n                onChange={changeSpeed}\n              />\n            </Form.Item>\n            <Form.Item label=\"舵机\">\n              <Slider\n                value={direction}\n                min={0}\n                max={100}\n                onChange={changeDirection}\n              />\n            </Form.Item>\n          </TabPane>\n        </Tabs>\n        <Player disabled={!playerEnabled} address={playerWsAddress} />\n      </div>\n    );\n  }\n}\n","import React, { Component, createRef } from \"react\";\n\nexport default class Keybord extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = createRef();\n  }\n\n  componentDidMount() {\n    this.keyboardBind();\n  }\n\n  keyboardBind = () => {\n    const {\n      props: {\n        controller: { speed, direction }\n      }\n    } = this;\n    window.document.addEventListener(\n      \"keydown\",\n      event => {\n        const keyName = event.key;\n        if (keyName === \"w\") {\n          speed(1);\n        }\n        if (keyName === \"s\") {\n          speed(-1);\n        }\n        if (keyName === \"a\") {\n          direction(1);\n        }\n        if (keyName === \"d\") {\n          direction(-1);\n        }\n      },\n      false\n    );\n    window.document.addEventListener(\n      \"keyup\",\n      event => {\n        const {\n          props: {\n            controller: { speed, direction }\n          }\n        } = this;\n        const keyName = event.key;\n        if (keyName === \"w\") {\n          speed(0);\n        }\n        if (keyName === \"s\") {\n          speed(0);\n        }\n        if (keyName === \"a\") {\n          direction(0);\n        }\n        if (keyName === \"d\") {\n          direction(0);\n        }\n      },\n      false\n    );\n  };\n\n  render() {\n    return (\n      <div  tabIndex=\"0\" ref={this.ref}>\n        wads\n      </div>\n    );\n  }\n}\n","import React, { Component, createRef } from \"react\";\n\nexport default class Player extends Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.disabled !== this.props.disabled) {\n      if (nextProps.disabled) {\n        this.disconnect();\n      } else {\n        this.connect();\n      }\n    }\n  }\n\n  connect() {\n    const { address } = this.props;\n    if (!address) return;\n    this.wsavc = new window.WSAvcPlayer(this.canvasRef.current, \"webgl\", 1, 35);\n    this.wsavc.connect(\n      `${window.location.protocol === \"https:\" ? \"wss\" : \"ws\"}://${address}`,\n      () => {\n        this.wsavc.playStream();\n      }\n    );\n  }\n\n  disconnect() {\n    if (this.wsavc) {\n      this.wsavc.disconnect();\n      this.wsavc.initCanvas();\n      this.wsavc = undefined;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"player\">\n        <canvas className=\"canvas\" ref={this.canvasRef}></canvas>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}